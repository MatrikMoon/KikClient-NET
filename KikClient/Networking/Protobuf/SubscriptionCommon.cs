// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: entity/v1/subscription_common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common.Entity.V1 {

  /// <summary>Holder for reflection information generated from entity/v1/subscription_common.proto</summary>
  public static partial class SubscriptionCommonReflection {

    #region Descriptor
    /// <summary>File descriptor for entity/v1/subscription_common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SubscriptionCommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNlbnRpdHkvdjEvc3Vic2NyaXB0aW9uX2NvbW1vbi5wcm90bxIQY29tbW9u",
            "LmVudGl0eS52MRoZcHJvdG9idWZfdmFsaWRhdGlvbi5wcm90bxodZW50aXR5",
            "L3YxL2VudGl0eV9jb21tb24ucHJvdG8iLwoPUm9zdGVyU3luY1Rva2VuEhwK",
            "B3BheWxvYWQYASABKAxCC8qdJQcIASgBMIAoIrQBCgtSb3N0ZXJFbnRyeRI8",
            "Cgl1c2VyX2RhdGEYASABKAsyJy5jb21tb24uZW50aXR5LnYxLkVudGl0eVVz",
            "ZXJSb3N0ZXJFbnRyeUgAEj4KCmdyb3VwX2RhdGEYAiABKAsyKC5jb21tb24u",
            "ZW50aXR5LnYxLkVudGl0eUdyb3VwUm9zdGVyRW50cnlIABISCgppc19ibG9j",
            "a2VkGAMgASgIQhMKEXJvc3Rlcl9lbnRyeV9raW5kQm4KFGNvbS5raWsuZW50",
            "aXR5Lm1vZGVsWkxnaXRodWIuY29tL2tpa2ludGVyYWN0aXZlL3hpcGhpYXMt",
            "bW9kZWwtY29tbW9uL2dlbmVyYXRlZC9nby9lbnRpdHkvdjE7ZW50aXR5oAEB",
            "ogIEU1VCU2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Kik.Validation.ProtobufValidationReflection.Descriptor, global::Common.Entity.V1.EntityCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Entity.V1.RosterSyncToken), global::Common.Entity.V1.RosterSyncToken.Parser, new[]{ "Payload" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Entity.V1.RosterEntry), global::Common.Entity.V1.RosterEntry.Parser, new[]{ "UserData", "GroupData", "IsBlocked" }, new[]{ "RosterEntryKind" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RosterSyncToken : pb::IMessage<RosterSyncToken>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RosterSyncToken> _parser = new pb::MessageParser<RosterSyncToken>(() => new RosterSyncToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RosterSyncToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Entity.V1.SubscriptionCommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RosterSyncToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RosterSyncToken(RosterSyncToken other) : this() {
      payload_ = other.payload_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RosterSyncToken Clone() {
      return new RosterSyncToken(this);
    }

    /// <summary>Field number for the "payload" field.</summary>
    public const int PayloadFieldNumber = 1;
    private pb::ByteString payload_ = pb::ByteString.Empty;
    /// <summary>
    /// Clients MUST NOT interpret this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Payload {
      get { return payload_; }
      set {
        payload_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RosterSyncToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RosterSyncToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Payload != other.Payload) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Payload.Length != 0) hash ^= Payload.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Payload.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Payload.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Payload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Payload.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Payload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RosterSyncToken other) {
      if (other == null) {
        return;
      }
      if (other.Payload.Length != 0) {
        Payload = other.Payload;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Payload = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RosterEntry : pb::IMessage<RosterEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RosterEntry> _parser = new pb::MessageParser<RosterEntry>(() => new RosterEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RosterEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Entity.V1.SubscriptionCommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RosterEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RosterEntry(RosterEntry other) : this() {
      isBlocked_ = other.isBlocked_;
      switch (other.RosterEntryKindCase) {
        case RosterEntryKindOneofCase.UserData:
          UserData = other.UserData.Clone();
          break;
        case RosterEntryKindOneofCase.GroupData:
          GroupData = other.GroupData.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RosterEntry Clone() {
      return new RosterEntry(this);
    }

    /// <summary>Field number for the "user_data" field.</summary>
    public const int UserDataFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Entity.V1.EntityUserRosterEntry UserData {
      get { return rosterEntryKindCase_ == RosterEntryKindOneofCase.UserData ? (global::Common.Entity.V1.EntityUserRosterEntry) rosterEntryKind_ : null; }
      set {
        rosterEntryKind_ = value;
        rosterEntryKindCase_ = value == null ? RosterEntryKindOneofCase.None : RosterEntryKindOneofCase.UserData;
      }
    }

    /// <summary>Field number for the "group_data" field.</summary>
    public const int GroupDataFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Entity.V1.EntityGroupRosterEntry GroupData {
      get { return rosterEntryKindCase_ == RosterEntryKindOneofCase.GroupData ? (global::Common.Entity.V1.EntityGroupRosterEntry) rosterEntryKind_ : null; }
      set {
        rosterEntryKind_ = value;
        rosterEntryKindCase_ = value == null ? RosterEntryKindOneofCase.None : RosterEntryKindOneofCase.GroupData;
      }
    }

    /// <summary>Field number for the "is_blocked" field.</summary>
    public const int IsBlockedFieldNumber = 3;
    private bool isBlocked_;
    /// <summary>
    /// Only applies to user rosters
    /// Has this person being blocked by roster owner?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBlocked {
      get { return isBlocked_; }
      set {
        isBlocked_ = value;
      }
    }

    private object rosterEntryKind_;
    /// <summary>Enum of possible cases for the "roster_entry_kind" oneof.</summary>
    public enum RosterEntryKindOneofCase {
      None = 0,
      UserData = 1,
      GroupData = 2,
    }
    private RosterEntryKindOneofCase rosterEntryKindCase_ = RosterEntryKindOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RosterEntryKindOneofCase RosterEntryKindCase {
      get { return rosterEntryKindCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRosterEntryKind() {
      rosterEntryKindCase_ = RosterEntryKindOneofCase.None;
      rosterEntryKind_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RosterEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RosterEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserData, other.UserData)) return false;
      if (!object.Equals(GroupData, other.GroupData)) return false;
      if (IsBlocked != other.IsBlocked) return false;
      if (RosterEntryKindCase != other.RosterEntryKindCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rosterEntryKindCase_ == RosterEntryKindOneofCase.UserData) hash ^= UserData.GetHashCode();
      if (rosterEntryKindCase_ == RosterEntryKindOneofCase.GroupData) hash ^= GroupData.GetHashCode();
      if (IsBlocked != false) hash ^= IsBlocked.GetHashCode();
      hash ^= (int) rosterEntryKindCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (rosterEntryKindCase_ == RosterEntryKindOneofCase.UserData) {
        output.WriteRawTag(10);
        output.WriteMessage(UserData);
      }
      if (rosterEntryKindCase_ == RosterEntryKindOneofCase.GroupData) {
        output.WriteRawTag(18);
        output.WriteMessage(GroupData);
      }
      if (IsBlocked != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsBlocked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (rosterEntryKindCase_ == RosterEntryKindOneofCase.UserData) {
        output.WriteRawTag(10);
        output.WriteMessage(UserData);
      }
      if (rosterEntryKindCase_ == RosterEntryKindOneofCase.GroupData) {
        output.WriteRawTag(18);
        output.WriteMessage(GroupData);
      }
      if (IsBlocked != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsBlocked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rosterEntryKindCase_ == RosterEntryKindOneofCase.UserData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserData);
      }
      if (rosterEntryKindCase_ == RosterEntryKindOneofCase.GroupData) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupData);
      }
      if (IsBlocked != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RosterEntry other) {
      if (other == null) {
        return;
      }
      if (other.IsBlocked != false) {
        IsBlocked = other.IsBlocked;
      }
      switch (other.RosterEntryKindCase) {
        case RosterEntryKindOneofCase.UserData:
          if (UserData == null) {
            UserData = new global::Common.Entity.V1.EntityUserRosterEntry();
          }
          UserData.MergeFrom(other.UserData);
          break;
        case RosterEntryKindOneofCase.GroupData:
          if (GroupData == null) {
            GroupData = new global::Common.Entity.V1.EntityGroupRosterEntry();
          }
          GroupData.MergeFrom(other.GroupData);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Common.Entity.V1.EntityUserRosterEntry subBuilder = new global::Common.Entity.V1.EntityUserRosterEntry();
            if (rosterEntryKindCase_ == RosterEntryKindOneofCase.UserData) {
              subBuilder.MergeFrom(UserData);
            }
            input.ReadMessage(subBuilder);
            UserData = subBuilder;
            break;
          }
          case 18: {
            global::Common.Entity.V1.EntityGroupRosterEntry subBuilder = new global::Common.Entity.V1.EntityGroupRosterEntry();
            if (rosterEntryKindCase_ == RosterEntryKindOneofCase.GroupData) {
              subBuilder.MergeFrom(GroupData);
            }
            input.ReadMessage(subBuilder);
            GroupData = subBuilder;
            break;
          }
          case 24: {
            IsBlocked = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Common.Entity.V1.EntityUserRosterEntry subBuilder = new global::Common.Entity.V1.EntityUserRosterEntry();
            if (rosterEntryKindCase_ == RosterEntryKindOneofCase.UserData) {
              subBuilder.MergeFrom(UserData);
            }
            input.ReadMessage(subBuilder);
            UserData = subBuilder;
            break;
          }
          case 18: {
            global::Common.Entity.V1.EntityGroupRosterEntry subBuilder = new global::Common.Entity.V1.EntityGroupRosterEntry();
            if (rosterEntryKindCase_ == RosterEntryKindOneofCase.GroupData) {
              subBuilder.MergeFrom(GroupData);
            }
            input.ReadMessage(subBuilder);
            GroupData = subBuilder;
            break;
          }
          case 24: {
            IsBlocked = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
