// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messagepath/v1/keyboards.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common.Messagepath.V1 {

  /// <summary>Holder for reflection information generated from messagepath/v1/keyboards.proto</summary>
  public static partial class KeyboardsReflection {

    #region Descriptor
    /// <summary>File descriptor for messagepath/v1/keyboards.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static KeyboardsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5tZXNzYWdlcGF0aC92MS9rZXlib2FyZHMucHJvdG8SFWNvbW1vbi5tZXNz",
            "YWdlcGF0aC52MRoSY29tbW9uX21vZGVsLnByb3RvGhlwcm90b2J1Zl92YWxp",
            "ZGF0aW9uLnByb3RvIlQKEktleWJvYXJkQXR0YWNobWVudBI+CglrZXlib2Fy",
            "ZHMYASADKAsyHy5jb21tb24ubWVzc2FnZXBhdGgudjEuS2V5Ym9hcmRCCsqd",
            "JQYIAYAB6AcipgEKCEtleWJvYXJkEikKAnRvGAEgASgLMhUuY29tbW9uLlhp",
            "QmFyZVVzZXJKaWRCBsqdJQIIABIOCgZoaWRkZW4YAiABKAgSVwobc3VnZ2Vz",
            "dGVkX3Jlc3BvbnNlX2tleWJvYXJkGCAgASgLMjAuY29tbW9uLm1lc3NhZ2Vw",
            "YXRoLnYxLlN1Z2dlc3RlZFJlc3BvbnNlS2V5Ym9hcmRIAEIGCgR0eXBlImkK",
            "GVN1Z2dlc3RlZFJlc3BvbnNlS2V5Ym9hcmQSTAoJcmVzcG9uc2VzGAEgAygL",
            "MiwuY29tbW9uLm1lc3NhZ2VwYXRoLnYxLlN1Z2dlc3RlZFJlc3BvbnNlSXRl",
            "bUILyp0lBwgBeAGAAWQi9wIKFVN1Z2dlc3RlZFJlc3BvbnNlSXRlbRIdCght",
            "ZXRhZGF0YRgBIAEoCUILyp0lBwgAKAEw6AcSRQoNdGV4dF9yZXNwb25zZRgg",
            "IAEoCzIsLmNvbW1vbi5tZXNzYWdlcGF0aC52MS5UZXh0U3VnZ2VzdGVkUmVz",
            "cG9uc2VIABJLChBwYXltZW50X3Jlc3BvbnNlGCEgASgLMi8uY29tbW9uLm1l",
            "c3NhZ2VwYXRoLnYxLlBheW1lbnRTdWdnZXN0ZWRSZXNwb25zZUgAElYKFmZy",
            "aWVuZF9waWNrZXJfcmVzcG9uc2UYIiABKAsyNC5jb21tb24ubWVzc2FnZXBh",
            "dGgudjEuRnJpZW5kUGlja2VyU3VnZ2VzdGVkUmVzcG9uc2VIABJLChBwaWN0",
            "dXJlX3Jlc3BvbnNlGCMgASgLMi8uY29tbW9uLm1lc3NhZ2VwYXRoLnYxLlBp",
            "Y3R1cmVTdWdnZXN0ZWRSZXNwb25zZUgAQgYKBHR5cGUiMgoVVGV4dFN1Z2dl",
            "c3RlZFJlc3BvbnNlEhkKBGJvZHkYASABKAlCC8qdJQcIASgBMOgHIskCChhQ",
            "YXltZW50U3VnZ2VzdGVkUmVzcG9uc2USHgoLZGVzY3JpcHRpb24YASABKAlC",
            "CcqdJQUIATDoBxIdCgZhbW91bnQYAiABKAVCDcqdJQk5AQAAAAAAAAASHAoI",
            "Y3VycmVuY3kYAyABKAlCCsqdJQYIASgDMAMSLgoOdHJhbnNhY3Rpb25faWQY",
            "BCABKAsyDi5jb21tb24uWGlVdWlkQgbKnSUCCAESVQoKc2F2ZWRfY2FyZBgF",
            "IAEoCzI5LmNvbW1vbi5tZXNzYWdlcGF0aC52MS5QYXltZW50U3VnZ2VzdGVk",
            "UmVzcG9uc2UuU2F2ZWRDYXJkQgbKnSUCCAAaSQoJU2F2ZWRDYXJkEiEKDWxh",
            "c3RfNF9kaWdpdHMYASABKAlCCsqdJQYIASgEMAQSGQoFYnJhbmQYAiABKAlC",
            "CsqdJQYIASgBMCAivAEKHUZyaWVuZFBpY2tlclN1Z2dlc3RlZFJlc3BvbnNl",
            "EhcKBGJvZHkYASABKAlCCcqdJQUIADDoBxIjCgNtaW4YAiABKAVCFsqdJRI5",
            "AAAAAAAAAABB6AMAAAAAAAASIwoDbWF4GAMgASgFQhbKnSUSOQAAAAAAAAAA",
            "QegDAAAAAAAAEjgKC3ByZXNlbGVjdGVkGAQgAygLMhUuY29tbW9uLlhpQmFy",
            "ZVVzZXJKaWRCDMqdJQgIAHgAgAHoByKEAQoYUGljdHVyZVN1Z2dlc3RlZFJl",
            "c3BvbnNlEiIKDXRodW1ibmFpbF91cmwYASABKAlCC8qdJQcIASgBMOgHEhwK",
            "B3BpY191cmwYAyABKAlCC8qdJQcIASgBMOgHEiYKBnBpY19pZBgFIAEoCzIO",
            "LmNvbW1vbi5YaVV1aWRCBsqdJQIIASJjChdLZXlib2FyZFJlcGx5QXR0YWNo",
            "bWVudBJACg9zdWdnZXN0ZWRfcmVwbHkYASABKAsyJS5jb21tb24ubWVzc2Fn",
            "ZXBhdGgudjEuU3VnZ2VzdGVkUmVwbHlIAEIGCgR0eXBlItgCCg5TdWdnZXN0",
            "ZWRSZXBseRIdCghtZXRhZGF0YRgBIAEoCUILyp0lBwgAKAEw6AcSPwoKdGV4",
            "dF9yZXBseRggIAEoCzIpLmNvbW1vbi5tZXNzYWdlcGF0aC52MS5UZXh0U3Vn",
            "Z2VzdGVkUmVwbHlIABJFCg1wYXltZW50X3JlcGx5GCEgASgLMiwuY29tbW9u",
            "Lm1lc3NhZ2VwYXRoLnYxLlBheW1lbnRTdWdnZXN0ZWRSZXBseUgAElAKE2Zy",
            "aWVuZF9waWNrZXJfcmVwbHkYIiABKAsyMS5jb21tb24ubWVzc2FnZXBhdGgu",
            "djEuRnJpZW5kUGlja2VyU3VnZ2VzdGVkUmVwbHlIABJFCg1waWN0dXJlX3Jl",
            "cGx5GCMgASgLMiwuY29tbW9uLm1lc3NhZ2VwYXRoLnYxLlBpY3R1cmVTdWdn",
            "ZXN0ZWRSZXBseUgAQgYKBHR5cGUiFAoSVGV4dFN1Z2dlc3RlZFJlcGx5IhcK",
            "FVBheW1lbnRTdWdnZXN0ZWRSZXBseSJRChpGcmllbmRQaWNrZXJTdWdnZXN0",
            "ZWRSZXBseRIzCgZwaWNrZWQYASADKAsyFS5jb21tb24uWGlCYXJlVXNlckpp",
            "ZEIMyp0lCAgBeAGAAegHIj8KFVBpY3R1cmVTdWdnZXN0ZWRSZXBseRImCgZw",
            "aWNfaWQYBSABKAsyDi5jb21tb24uWGlVdWlkQgbKnSUCCAFCdwoZY29tLmtp",
            "ay5tZXNzYWdlcGF0aC5tb2RlbFpTZ2l0aHViLmNvbS9raWtpbnRlcmFjdGl2",
            "ZS94aXBoaWFzLW1vZGVsLWNvbW1vbi9nZW5lcmF0ZWQvZ28vbWVzc2FnZXBh",
            "dGg7bWVzc2FnZXBhdGiiAgRNUFRIYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Common.CommonModelReflection.Descriptor, global::Kik.Validation.ProtobufValidationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.KeyboardAttachment), global::Common.Messagepath.V1.KeyboardAttachment.Parser, new[]{ "Keyboards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.Keyboard), global::Common.Messagepath.V1.Keyboard.Parser, new[]{ "To", "Hidden", "SuggestedResponseKeyboard" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.SuggestedResponseKeyboard), global::Common.Messagepath.V1.SuggestedResponseKeyboard.Parser, new[]{ "Responses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.SuggestedResponseItem), global::Common.Messagepath.V1.SuggestedResponseItem.Parser, new[]{ "Metadata", "TextResponse", "PaymentResponse", "FriendPickerResponse", "PictureResponse" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.TextSuggestedResponse), global::Common.Messagepath.V1.TextSuggestedResponse.Parser, new[]{ "Body" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.PaymentSuggestedResponse), global::Common.Messagepath.V1.PaymentSuggestedResponse.Parser, new[]{ "Description", "Amount", "Currency", "TransactionId", "SavedCard" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.PaymentSuggestedResponse.Types.SavedCard), global::Common.Messagepath.V1.PaymentSuggestedResponse.Types.SavedCard.Parser, new[]{ "Last4Digits", "Brand" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.FriendPickerSuggestedResponse), global::Common.Messagepath.V1.FriendPickerSuggestedResponse.Parser, new[]{ "Body", "Min", "Max", "Preselected" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.PictureSuggestedResponse), global::Common.Messagepath.V1.PictureSuggestedResponse.Parser, new[]{ "ThumbnailUrl", "PicUrl", "PicId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.KeyboardReplyAttachment), global::Common.Messagepath.V1.KeyboardReplyAttachment.Parser, new[]{ "SuggestedReply" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.SuggestedReply), global::Common.Messagepath.V1.SuggestedReply.Parser, new[]{ "Metadata", "TextReply", "PaymentReply", "FriendPickerReply", "PictureReply" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.TextSuggestedReply), global::Common.Messagepath.V1.TextSuggestedReply.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.PaymentSuggestedReply), global::Common.Messagepath.V1.PaymentSuggestedReply.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.FriendPickerSuggestedReply), global::Common.Messagepath.V1.FriendPickerSuggestedReply.Parser, new[]{ "Picked" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.PictureSuggestedReply), global::Common.Messagepath.V1.PictureSuggestedReply.Parser, new[]{ "PicId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// KeyboardAttachment defines the mechanism that allow bots to alter the behavior of keyboards on a
  /// user's device.
  ///
  /// Specifying a Keyboard allows a bot to give the user more information about what kinds of
  /// responses they expect from the user at that point in time.
  ///
  /// Up to 51 of these may be present in a single message to be delivered. The case where this can
  /// occur is in the case of a bot responding to a mention in a group containing 50 individuals, and
  /// also having a default.
  ///
  /// If a client receives multiple keyboards in this list. The first one should be taken as the
  /// correct one to display. In the future, clients may support multiple keyboards being received.
  ///
  /// See: https://docs.google.com/document/d/18C33WPHg9v-Yaot1eMeR8bonllo5qbL0oR0pC3ZjDPs/edit
  /// And: https://docs.google.com/document/d/11WF4MeW55z1bPkBQwoDlQ1-kT0pQz_or4FWXBZgf2PY/edit
  /// And: https://dev.kik.com/#/docs/messaging#keyboards
  /// </summary>
  public sealed partial class KeyboardAttachment : pb::IMessage<KeyboardAttachment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyboardAttachment> _parser = new pb::MessageParser<KeyboardAttachment>(() => new KeyboardAttachment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyboardAttachment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyboardAttachment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyboardAttachment(KeyboardAttachment other) : this() {
      keyboards_ = other.keyboards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyboardAttachment Clone() {
      return new KeyboardAttachment(this);
    }

    /// <summary>Field number for the "keyboards" field.</summary>
    public const int KeyboardsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Common.Messagepath.V1.Keyboard> _repeated_keyboards_codec
        = pb::FieldCodec.ForMessage(10, global::Common.Messagepath.V1.Keyboard.Parser);
    private readonly pbc::RepeatedField<global::Common.Messagepath.V1.Keyboard> keyboards_ = new pbc::RepeatedField<global::Common.Messagepath.V1.Keyboard>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.Messagepath.V1.Keyboard> Keyboards {
      get { return keyboards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyboardAttachment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyboardAttachment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!keyboards_.Equals(other.keyboards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= keyboards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      keyboards_.WriteTo(output, _repeated_keyboards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      keyboards_.WriteTo(ref output, _repeated_keyboards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += keyboards_.CalculateSize(_repeated_keyboards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyboardAttachment other) {
      if (other == null) {
        return;
      }
      keyboards_.Add(other.keyboards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            keyboards_.AddEntriesFrom(input, _repeated_keyboards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            keyboards_.AddEntriesFrom(ref input, _repeated_keyboards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A single keyboard defines how a client should render the input space on their screen.
  /// </summary>
  public sealed partial class Keyboard : pb::IMessage<Keyboard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Keyboard> _parser = new pb::MessageParser<Keyboard>(() => new Keyboard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Keyboard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Keyboard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Keyboard(Keyboard other) : this() {
      to_ = other.to_ != null ? other.to_.Clone() : null;
      hidden_ = other.hidden_;
      switch (other.TypeCase) {
        case TypeOneofCase.SuggestedResponseKeyboard:
          SuggestedResponseKeyboard = other.SuggestedResponseKeyboard.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Keyboard Clone() {
      return new Keyboard(this);
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 1;
    private global::Common.XiBareUserJid to_;
    /// <summary>
    /// The user that will receive this particular instance of the keyboard.
    ///
    /// In the event that this field is omitted, this keyboard should be sent to all users that will
    /// receive the message containing this keyboard.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiBareUserJid To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "hidden" field.</summary>
    public const int HiddenFieldNumber = 2;
    private bool hidden_;
    /// <summary>
    /// Determines whether or not this keyboard will be shown to the user first.
    ///
    /// If true, show the user the system default keyboard with the option to toggle to this
    /// keyboard.
    /// If false, this keyboard should be shown first, with the option to toggle back to the system
    /// keyboard.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Hidden {
      get { return hidden_; }
      set {
        hidden_ = value;
      }
    }

    /// <summary>Field number for the "suggested_response_keyboard" field.</summary>
    public const int SuggestedResponseKeyboardFieldNumber = 32;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.SuggestedResponseKeyboard SuggestedResponseKeyboard {
      get { return typeCase_ == TypeOneofCase.SuggestedResponseKeyboard ? (global::Common.Messagepath.V1.SuggestedResponseKeyboard) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.SuggestedResponseKeyboard;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      SuggestedResponseKeyboard = 32,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Keyboard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Keyboard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(To, other.To)) return false;
      if (Hidden != other.Hidden) return false;
      if (!object.Equals(SuggestedResponseKeyboard, other.SuggestedResponseKeyboard)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (to_ != null) hash ^= To.GetHashCode();
      if (Hidden != false) hash ^= Hidden.GetHashCode();
      if (typeCase_ == TypeOneofCase.SuggestedResponseKeyboard) hash ^= SuggestedResponseKeyboard.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (to_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(To);
      }
      if (Hidden != false) {
        output.WriteRawTag(16);
        output.WriteBool(Hidden);
      }
      if (typeCase_ == TypeOneofCase.SuggestedResponseKeyboard) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(SuggestedResponseKeyboard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (to_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(To);
      }
      if (Hidden != false) {
        output.WriteRawTag(16);
        output.WriteBool(Hidden);
      }
      if (typeCase_ == TypeOneofCase.SuggestedResponseKeyboard) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(SuggestedResponseKeyboard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (Hidden != false) {
        size += 1 + 1;
      }
      if (typeCase_ == TypeOneofCase.SuggestedResponseKeyboard) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SuggestedResponseKeyboard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Keyboard other) {
      if (other == null) {
        return;
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::Common.XiBareUserJid();
        }
        To.MergeFrom(other.To);
      }
      if (other.Hidden != false) {
        Hidden = other.Hidden;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.SuggestedResponseKeyboard:
          if (SuggestedResponseKeyboard == null) {
            SuggestedResponseKeyboard = new global::Common.Messagepath.V1.SuggestedResponseKeyboard();
          }
          SuggestedResponseKeyboard.MergeFrom(other.SuggestedResponseKeyboard);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (to_ == null) {
              To = new global::Common.XiBareUserJid();
            }
            input.ReadMessage(To);
            break;
          }
          case 16: {
            Hidden = input.ReadBool();
            break;
          }
          case 258: {
            global::Common.Messagepath.V1.SuggestedResponseKeyboard subBuilder = new global::Common.Messagepath.V1.SuggestedResponseKeyboard();
            if (typeCase_ == TypeOneofCase.SuggestedResponseKeyboard) {
              subBuilder.MergeFrom(SuggestedResponseKeyboard);
            }
            input.ReadMessage(subBuilder);
            SuggestedResponseKeyboard = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (to_ == null) {
              To = new global::Common.XiBareUserJid();
            }
            input.ReadMessage(To);
            break;
          }
          case 16: {
            Hidden = input.ReadBool();
            break;
          }
          case 258: {
            global::Common.Messagepath.V1.SuggestedResponseKeyboard subBuilder = new global::Common.Messagepath.V1.SuggestedResponseKeyboard();
            if (typeCase_ == TypeOneofCase.SuggestedResponseKeyboard) {
              subBuilder.MergeFrom(SuggestedResponseKeyboard);
            }
            input.ReadMessage(subBuilder);
            SuggestedResponseKeyboard = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// SuggestedResponseKeyboards allow bots to provide an ordered list of options that a user can
  /// select from in order to respond to the conversation.
  ///
  /// See: https://dev.kik.com/#/docs/messaging#suggested-response-keyboard
  /// </summary>
  public sealed partial class SuggestedResponseKeyboard : pb::IMessage<SuggestedResponseKeyboard>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SuggestedResponseKeyboard> _parser = new pb::MessageParser<SuggestedResponseKeyboard>(() => new SuggestedResponseKeyboard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuggestedResponseKeyboard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestedResponseKeyboard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestedResponseKeyboard(SuggestedResponseKeyboard other) : this() {
      responses_ = other.responses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestedResponseKeyboard Clone() {
      return new SuggestedResponseKeyboard(this);
    }

    /// <summary>Field number for the "responses" field.</summary>
    public const int ResponsesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Common.Messagepath.V1.SuggestedResponseItem> _repeated_responses_codec
        = pb::FieldCodec.ForMessage(10, global::Common.Messagepath.V1.SuggestedResponseItem.Parser);
    private readonly pbc::RepeatedField<global::Common.Messagepath.V1.SuggestedResponseItem> responses_ = new pbc::RepeatedField<global::Common.Messagepath.V1.SuggestedResponseItem>();
    /// <summary>
    /// The Bots Platform may apply additional validation against ordering of values provided in this
    /// list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.Messagepath.V1.SuggestedResponseItem> Responses {
      get { return responses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuggestedResponseKeyboard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuggestedResponseKeyboard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!responses_.Equals(other.responses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= responses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      responses_.WriteTo(output, _repeated_responses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      responses_.WriteTo(ref output, _repeated_responses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += responses_.CalculateSize(_repeated_responses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuggestedResponseKeyboard other) {
      if (other == null) {
        return;
      }
      responses_.Add(other.responses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            responses_.AddEntriesFrom(input, _repeated_responses_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            responses_.AddEntriesFrom(ref input, _repeated_responses_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A suggested response item represents a single item within a possible list of options for a
  /// SuggestedResponseKeyboard.
  /// </summary>
  public sealed partial class SuggestedResponseItem : pb::IMessage<SuggestedResponseItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SuggestedResponseItem> _parser = new pb::MessageParser<SuggestedResponseItem>(() => new SuggestedResponseItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuggestedResponseItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestedResponseItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestedResponseItem(SuggestedResponseItem other) : this() {
      metadata_ = other.metadata_;
      switch (other.TypeCase) {
        case TypeOneofCase.TextResponse:
          TextResponse = other.TextResponse.Clone();
          break;
        case TypeOneofCase.PaymentResponse:
          PaymentResponse = other.PaymentResponse.Clone();
          break;
        case TypeOneofCase.FriendPickerResponse:
          FriendPickerResponse = other.FriendPickerResponse.Clone();
          break;
        case TypeOneofCase.PictureResponse:
          PictureResponse = other.PictureResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestedResponseItem Clone() {
      return new SuggestedResponseItem(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private string metadata_ = "";
    /// <summary>
    /// Metadata is provided by bots, and must be returned back to the Bot Platform upon users
    /// selecting this instance of response. This metadata should be attached to a SuggestedReplyItem
    /// when being passed back to the bots platform.
    ///
    /// Metadata should not be inspected or interpreted by clients.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Metadata {
      get { return metadata_; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text_response" field.</summary>
    public const int TextResponseFieldNumber = 32;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.TextSuggestedResponse TextResponse {
      get { return typeCase_ == TypeOneofCase.TextResponse ? (global::Common.Messagepath.V1.TextSuggestedResponse) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.TextResponse;
      }
    }

    /// <summary>Field number for the "payment_response" field.</summary>
    public const int PaymentResponseFieldNumber = 33;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.PaymentSuggestedResponse PaymentResponse {
      get { return typeCase_ == TypeOneofCase.PaymentResponse ? (global::Common.Messagepath.V1.PaymentSuggestedResponse) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.PaymentResponse;
      }
    }

    /// <summary>Field number for the "friend_picker_response" field.</summary>
    public const int FriendPickerResponseFieldNumber = 34;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.FriendPickerSuggestedResponse FriendPickerResponse {
      get { return typeCase_ == TypeOneofCase.FriendPickerResponse ? (global::Common.Messagepath.V1.FriendPickerSuggestedResponse) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.FriendPickerResponse;
      }
    }

    /// <summary>Field number for the "picture_response" field.</summary>
    public const int PictureResponseFieldNumber = 35;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.PictureSuggestedResponse PictureResponse {
      get { return typeCase_ == TypeOneofCase.PictureResponse ? (global::Common.Messagepath.V1.PictureSuggestedResponse) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.PictureResponse;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      TextResponse = 32,
      PaymentResponse = 33,
      FriendPickerResponse = 34,
      PictureResponse = 35,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuggestedResponseItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuggestedResponseItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Metadata != other.Metadata) return false;
      if (!object.Equals(TextResponse, other.TextResponse)) return false;
      if (!object.Equals(PaymentResponse, other.PaymentResponse)) return false;
      if (!object.Equals(FriendPickerResponse, other.FriendPickerResponse)) return false;
      if (!object.Equals(PictureResponse, other.PictureResponse)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
      if (typeCase_ == TypeOneofCase.TextResponse) hash ^= TextResponse.GetHashCode();
      if (typeCase_ == TypeOneofCase.PaymentResponse) hash ^= PaymentResponse.GetHashCode();
      if (typeCase_ == TypeOneofCase.FriendPickerResponse) hash ^= FriendPickerResponse.GetHashCode();
      if (typeCase_ == TypeOneofCase.PictureResponse) hash ^= PictureResponse.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Metadata.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Metadata);
      }
      if (typeCase_ == TypeOneofCase.TextResponse) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(TextResponse);
      }
      if (typeCase_ == TypeOneofCase.PaymentResponse) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(PaymentResponse);
      }
      if (typeCase_ == TypeOneofCase.FriendPickerResponse) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(FriendPickerResponse);
      }
      if (typeCase_ == TypeOneofCase.PictureResponse) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(PictureResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Metadata.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Metadata);
      }
      if (typeCase_ == TypeOneofCase.TextResponse) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(TextResponse);
      }
      if (typeCase_ == TypeOneofCase.PaymentResponse) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(PaymentResponse);
      }
      if (typeCase_ == TypeOneofCase.FriendPickerResponse) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(FriendPickerResponse);
      }
      if (typeCase_ == TypeOneofCase.PictureResponse) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(PictureResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Metadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Metadata);
      }
      if (typeCase_ == TypeOneofCase.TextResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TextResponse);
      }
      if (typeCase_ == TypeOneofCase.PaymentResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PaymentResponse);
      }
      if (typeCase_ == TypeOneofCase.FriendPickerResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FriendPickerResponse);
      }
      if (typeCase_ == TypeOneofCase.PictureResponse) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PictureResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuggestedResponseItem other) {
      if (other == null) {
        return;
      }
      if (other.Metadata.Length != 0) {
        Metadata = other.Metadata;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.TextResponse:
          if (TextResponse == null) {
            TextResponse = new global::Common.Messagepath.V1.TextSuggestedResponse();
          }
          TextResponse.MergeFrom(other.TextResponse);
          break;
        case TypeOneofCase.PaymentResponse:
          if (PaymentResponse == null) {
            PaymentResponse = new global::Common.Messagepath.V1.PaymentSuggestedResponse();
          }
          PaymentResponse.MergeFrom(other.PaymentResponse);
          break;
        case TypeOneofCase.FriendPickerResponse:
          if (FriendPickerResponse == null) {
            FriendPickerResponse = new global::Common.Messagepath.V1.FriendPickerSuggestedResponse();
          }
          FriendPickerResponse.MergeFrom(other.FriendPickerResponse);
          break;
        case TypeOneofCase.PictureResponse:
          if (PictureResponse == null) {
            PictureResponse = new global::Common.Messagepath.V1.PictureSuggestedResponse();
          }
          PictureResponse.MergeFrom(other.PictureResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Metadata = input.ReadString();
            break;
          }
          case 258: {
            global::Common.Messagepath.V1.TextSuggestedResponse subBuilder = new global::Common.Messagepath.V1.TextSuggestedResponse();
            if (typeCase_ == TypeOneofCase.TextResponse) {
              subBuilder.MergeFrom(TextResponse);
            }
            input.ReadMessage(subBuilder);
            TextResponse = subBuilder;
            break;
          }
          case 266: {
            global::Common.Messagepath.V1.PaymentSuggestedResponse subBuilder = new global::Common.Messagepath.V1.PaymentSuggestedResponse();
            if (typeCase_ == TypeOneofCase.PaymentResponse) {
              subBuilder.MergeFrom(PaymentResponse);
            }
            input.ReadMessage(subBuilder);
            PaymentResponse = subBuilder;
            break;
          }
          case 274: {
            global::Common.Messagepath.V1.FriendPickerSuggestedResponse subBuilder = new global::Common.Messagepath.V1.FriendPickerSuggestedResponse();
            if (typeCase_ == TypeOneofCase.FriendPickerResponse) {
              subBuilder.MergeFrom(FriendPickerResponse);
            }
            input.ReadMessage(subBuilder);
            FriendPickerResponse = subBuilder;
            break;
          }
          case 282: {
            global::Common.Messagepath.V1.PictureSuggestedResponse subBuilder = new global::Common.Messagepath.V1.PictureSuggestedResponse();
            if (typeCase_ == TypeOneofCase.PictureResponse) {
              subBuilder.MergeFrom(PictureResponse);
            }
            input.ReadMessage(subBuilder);
            PictureResponse = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Metadata = input.ReadString();
            break;
          }
          case 258: {
            global::Common.Messagepath.V1.TextSuggestedResponse subBuilder = new global::Common.Messagepath.V1.TextSuggestedResponse();
            if (typeCase_ == TypeOneofCase.TextResponse) {
              subBuilder.MergeFrom(TextResponse);
            }
            input.ReadMessage(subBuilder);
            TextResponse = subBuilder;
            break;
          }
          case 266: {
            global::Common.Messagepath.V1.PaymentSuggestedResponse subBuilder = new global::Common.Messagepath.V1.PaymentSuggestedResponse();
            if (typeCase_ == TypeOneofCase.PaymentResponse) {
              subBuilder.MergeFrom(PaymentResponse);
            }
            input.ReadMessage(subBuilder);
            PaymentResponse = subBuilder;
            break;
          }
          case 274: {
            global::Common.Messagepath.V1.FriendPickerSuggestedResponse subBuilder = new global::Common.Messagepath.V1.FriendPickerSuggestedResponse();
            if (typeCase_ == TypeOneofCase.FriendPickerResponse) {
              subBuilder.MergeFrom(FriendPickerResponse);
            }
            input.ReadMessage(subBuilder);
            FriendPickerResponse = subBuilder;
            break;
          }
          case 282: {
            global::Common.Messagepath.V1.PictureSuggestedResponse subBuilder = new global::Common.Messagepath.V1.PictureSuggestedResponse();
            if (typeCase_ == TypeOneofCase.PictureResponse) {
              subBuilder.MergeFrom(PictureResponse);
            }
            input.ReadMessage(subBuilder);
            PictureResponse = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Container for a text message suggested response.
  ///
  /// See: https://dev.kik.com/#/docs/messaging#text-response-object
  /// </summary>
  public sealed partial class TextSuggestedResponse : pb::IMessage<TextSuggestedResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextSuggestedResponse> _parser = new pb::MessageParser<TextSuggestedResponse>(() => new TextSuggestedResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextSuggestedResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextSuggestedResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextSuggestedResponse(TextSuggestedResponse other) : this() {
      body_ = other.body_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextSuggestedResponse Clone() {
      return new TextSuggestedResponse(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private string body_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextSuggestedResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextSuggestedResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Body != other.Body) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Body.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Body.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextSuggestedResponse other) {
      if (other == null) {
        return;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Body = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Body = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Container for a payment suggested response.
  /// Private, and undocumented suggested response type.
  /// Only used internally for demoing purposes (as of Sept 2016).
  ///
  /// The Bots Platform uses the Stripe API for payment functionality.
  /// See: https://github.com/kikinteractive/kik-product/wiki/Payments-API-Docs
  /// And: https://stripe.com/docs/api
  /// </summary>
  public sealed partial class PaymentSuggestedResponse : pb::IMessage<PaymentSuggestedResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PaymentSuggestedResponse> _parser = new pb::MessageParser<PaymentSuggestedResponse>(() => new PaymentSuggestedResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaymentSuggestedResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentSuggestedResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentSuggestedResponse(PaymentSuggestedResponse other) : this() {
      description_ = other.description_;
      amount_ = other.amount_;
      currency_ = other.currency_;
      transactionId_ = other.transactionId_ != null ? other.transactionId_.Clone() : null;
      savedCard_ = other.savedCard_ != null ? other.savedCard_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentSuggestedResponse Clone() {
      return new PaymentSuggestedResponse(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "currency" field.</summary>
    public const int CurrencyFieldNumber = 3;
    private string currency_ = "";
    /// <summary>
    /// ISO 4217 currency code, must be three characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Currency {
      get { return currency_; }
      set {
        currency_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transaction_id" field.</summary>
    public const int TransactionIdFieldNumber = 4;
    private global::Common.XiUuid transactionId_;
    /// <summary>
    /// Random UUID4 assigned to each payment suggested response by the Bots Platform in order to identify individual
    /// transactions.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiUuid TransactionId {
      get { return transactionId_; }
      set {
        transactionId_ = value;
      }
    }

    /// <summary>Field number for the "saved_card" field.</summary>
    public const int SavedCardFieldNumber = 5;
    private global::Common.Messagepath.V1.PaymentSuggestedResponse.Types.SavedCard savedCard_;
    /// <summary>
    /// This message will not be present if the user who is receiving this suggested response does not have a saved
    /// payment method.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.PaymentSuggestedResponse.Types.SavedCard SavedCard {
      get { return savedCard_; }
      set {
        savedCard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaymentSuggestedResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaymentSuggestedResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Description != other.Description) return false;
      if (Amount != other.Amount) return false;
      if (Currency != other.Currency) return false;
      if (!object.Equals(TransactionId, other.TransactionId)) return false;
      if (!object.Equals(SavedCard, other.SavedCard)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (Currency.Length != 0) hash ^= Currency.GetHashCode();
      if (transactionId_ != null) hash ^= TransactionId.GetHashCode();
      if (savedCard_ != null) hash ^= SavedCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (Amount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Currency);
      }
      if (transactionId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TransactionId);
      }
      if (savedCard_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SavedCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Description.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Description);
      }
      if (Amount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Amount);
      }
      if (Currency.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Currency);
      }
      if (transactionId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(TransactionId);
      }
      if (savedCard_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SavedCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (Currency.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Currency);
      }
      if (transactionId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TransactionId);
      }
      if (savedCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SavedCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaymentSuggestedResponse other) {
      if (other == null) {
        return;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      if (other.Currency.Length != 0) {
        Currency = other.Currency;
      }
      if (other.transactionId_ != null) {
        if (transactionId_ == null) {
          TransactionId = new global::Common.XiUuid();
        }
        TransactionId.MergeFrom(other.TransactionId);
      }
      if (other.savedCard_ != null) {
        if (savedCard_ == null) {
          SavedCard = new global::Common.Messagepath.V1.PaymentSuggestedResponse.Types.SavedCard();
        }
        SavedCard.MergeFrom(other.SavedCard);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
          case 26: {
            Currency = input.ReadString();
            break;
          }
          case 34: {
            if (transactionId_ == null) {
              TransactionId = new global::Common.XiUuid();
            }
            input.ReadMessage(TransactionId);
            break;
          }
          case 42: {
            if (savedCard_ == null) {
              SavedCard = new global::Common.Messagepath.V1.PaymentSuggestedResponse.Types.SavedCard();
            }
            input.ReadMessage(SavedCard);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Description = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt32();
            break;
          }
          case 26: {
            Currency = input.ReadString();
            break;
          }
          case 34: {
            if (transactionId_ == null) {
              TransactionId = new global::Common.XiUuid();
            }
            input.ReadMessage(TransactionId);
            break;
          }
          case 42: {
            if (savedCard_ == null) {
              SavedCard = new global::Common.Messagepath.V1.PaymentSuggestedResponse.Types.SavedCard();
            }
            input.ReadMessage(SavedCard);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PaymentSuggestedResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Container for a saved payment method.
      /// </summary>
      public sealed partial class SavedCard : pb::IMessage<SavedCard>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<SavedCard> _parser = new pb::MessageParser<SavedCard>(() => new SavedCard());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<SavedCard> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Common.Messagepath.V1.PaymentSuggestedResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SavedCard() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SavedCard(SavedCard other) : this() {
          last4Digits_ = other.last4Digits_;
          brand_ = other.brand_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public SavedCard Clone() {
          return new SavedCard(this);
        }

        /// <summary>Field number for the "last_4_digits" field.</summary>
        public const int Last4DigitsFieldNumber = 1;
        private string last4Digits_ = "";
        /// <summary>
        /// The last 4 digits of a user's saved card, must be 4 digits.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Last4Digits {
          get { return last4Digits_; }
          set {
            last4Digits_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "brand" field.</summary>
        public const int BrandFieldNumber = 2;
        private string brand_ = "";
        /// <summary>
        /// The brand of the user's saved card.
        /// In order to validate credit card numbers, the client needs the brand as well in addition to the last 4 digits.
        /// See http://www.freeformatter.com/credit-card-number-generator-validator.html for more information.
        /// See for https://stripe.com/docs/api#card_object-brand Stripe's supported brands
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Brand {
          get { return brand_; }
          set {
            brand_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as SavedCard);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(SavedCard other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Last4Digits != other.Last4Digits) return false;
          if (Brand != other.Brand) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Last4Digits.Length != 0) hash ^= Last4Digits.GetHashCode();
          if (Brand.Length != 0) hash ^= Brand.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (Last4Digits.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Last4Digits);
          }
          if (Brand.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Brand);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (Last4Digits.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Last4Digits);
          }
          if (Brand.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Brand);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Last4Digits.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Last4Digits);
          }
          if (Brand.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Brand);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(SavedCard other) {
          if (other == null) {
            return;
          }
          if (other.Last4Digits.Length != 0) {
            Last4Digits = other.Last4Digits;
          }
          if (other.Brand.Length != 0) {
            Brand = other.Brand;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Last4Digits = input.ReadString();
                break;
              }
              case 18: {
                Brand = input.ReadString();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                Last4Digits = input.ReadString();
                break;
              }
              case 18: {
                Brand = input.ReadString();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  /// <summary>
  /// Container for a friend picker suggested response
  /// All fields optional. Fields that are not given values have defaults defined by the API and/or
  /// clients, depending on where these defaults are expected to live.
  /// Clients will implement sensible default values, and the Bots API will be able to override them as
  /// necessary.
  ///
  /// See: https://docs.google.com/document/d/1v4JtP1fdah5cvgXW2apScf_bemMkrvh_J370X5jJD48/edit
  /// And: https://dev.kik.com/#/docs/messaging#friend-picker-response-object
  /// </summary>
  public sealed partial class FriendPickerSuggestedResponse : pb::IMessage<FriendPickerSuggestedResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FriendPickerSuggestedResponse> _parser = new pb::MessageParser<FriendPickerSuggestedResponse>(() => new FriendPickerSuggestedResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendPickerSuggestedResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendPickerSuggestedResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendPickerSuggestedResponse(FriendPickerSuggestedResponse other) : this() {
      body_ = other.body_;
      min_ = other.min_;
      max_ = other.max_;
      preselected_ = other.preselected_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendPickerSuggestedResponse Clone() {
      return new FriendPickerSuggestedResponse(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private string body_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 2;
    private int min_;
    /// <summary>
    /// Minimum number of users that can be selected in the friend picker shown on clients.
    /// Must be less than or equal to the max.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 3;
    private int max_;
    /// <summary>
    /// Maximum number of users that can be selected in the friend picker shown on clients.
    /// Must be greater than or equal to the min.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    /// <summary>Field number for the "preselected" field.</summary>
    public const int PreselectedFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Common.XiBareUserJid> _repeated_preselected_codec
        = pb::FieldCodec.ForMessage(34, global::Common.XiBareUserJid.Parser);
    private readonly pbc::RepeatedField<global::Common.XiBareUserJid> preselected_ = new pbc::RepeatedField<global::Common.XiBareUserJid>();
    /// <summary>
    /// List of jids of users that have been chosen to be selected before the user provides any
    /// input.
    ///
    /// If a user that is selected is not on the receiving user's roster, that user will not be
    /// selected.
    /// If a user that is selected does not have the sending user in their roster, the resulting
    /// message will be dropped, as described by the `VisiblityRulesAttachment` that must come with
    /// messages that are sent as a result of `FriendPickedResponse`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.XiBareUserJid> Preselected {
      get { return preselected_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendPickerSuggestedResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendPickerSuggestedResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Body != other.Body) return false;
      if (Min != other.Min) return false;
      if (Max != other.Max) return false;
      if(!preselected_.Equals(other.preselected_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (Min != 0) hash ^= Min.GetHashCode();
      if (Max != 0) hash ^= Max.GetHashCode();
      hash ^= preselected_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Body.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Body);
      }
      if (Min != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Min);
      }
      if (Max != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Max);
      }
      preselected_.WriteTo(output, _repeated_preselected_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Body.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Body);
      }
      if (Min != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Min);
      }
      if (Max != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Max);
      }
      preselected_.WriteTo(ref output, _repeated_preselected_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (Min != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Min);
      }
      if (Max != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Max);
      }
      size += preselected_.CalculateSize(_repeated_preselected_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendPickerSuggestedResponse other) {
      if (other == null) {
        return;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.Min != 0) {
        Min = other.Min;
      }
      if (other.Max != 0) {
        Max = other.Max;
      }
      preselected_.Add(other.preselected_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Body = input.ReadString();
            break;
          }
          case 16: {
            Min = input.ReadInt32();
            break;
          }
          case 24: {
            Max = input.ReadInt32();
            break;
          }
          case 34: {
            preselected_.AddEntriesFrom(input, _repeated_preselected_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Body = input.ReadString();
            break;
          }
          case 16: {
            Min = input.ReadInt32();
            break;
          }
          case 24: {
            Max = input.ReadInt32();
            break;
          }
          case 34: {
            preselected_.AddEntriesFrom(ref input, _repeated_preselected_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Container for a picture suggested response.
  ///
  /// See: https://docs.google.com/document/d/1dzZHfT99cD0356C7i7VR6WDyTH6DlSF98eu_pgqEHGo/edit
  /// </summary>
  public sealed partial class PictureSuggestedResponse : pb::IMessage<PictureSuggestedResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PictureSuggestedResponse> _parser = new pb::MessageParser<PictureSuggestedResponse>(() => new PictureSuggestedResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PictureSuggestedResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureSuggestedResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureSuggestedResponse(PictureSuggestedResponse other) : this() {
      thumbnailUrl_ = other.thumbnailUrl_;
      picUrl_ = other.picUrl_;
      picId_ = other.picId_ != null ? other.picId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureSuggestedResponse Clone() {
      return new PictureSuggestedResponse(this);
    }

    /// <summary>Field number for the "thumbnail_url" field.</summary>
    public const int ThumbnailUrlFieldNumber = 1;
    private string thumbnailUrl_ = "";
    /// <summary>
    /// The contents of this URL will be what appear in the client's picture suggested response
    /// rendering.
    /// This thumbnail will have been generated and hosted by the Bots Platform from the content
    /// provided by the bot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThumbnailUrl {
      get { return thumbnailUrl_; }
      set {
        thumbnailUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pic_url" field.</summary>
    public const int PicUrlFieldNumber = 3;
    private string picUrl_ = "";
    /// <summary>
    /// The URL of the full size image that will be made available to clients after sending the image
    /// as a response to the bot.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PicUrl {
      get { return picUrl_; }
      set {
        picUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pic_id" field.</summary>
    public const int PicIdFieldNumber = 5;
    private global::Common.XiUuid picId_;
    /// <summary>
    /// Created by the Bots Platform, and may be used to uniquely identify images.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiUuid PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PictureSuggestedResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PictureSuggestedResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ThumbnailUrl != other.ThumbnailUrl) return false;
      if (PicUrl != other.PicUrl) return false;
      if (!object.Equals(PicId, other.PicId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ThumbnailUrl.Length != 0) hash ^= ThumbnailUrl.GetHashCode();
      if (PicUrl.Length != 0) hash ^= PicUrl.GetHashCode();
      if (picId_ != null) hash ^= PicId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ThumbnailUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ThumbnailUrl);
      }
      if (PicUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PicUrl);
      }
      if (picId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ThumbnailUrl.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ThumbnailUrl);
      }
      if (PicUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PicUrl);
      }
      if (picId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ThumbnailUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThumbnailUrl);
      }
      if (PicUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PicUrl);
      }
      if (picId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PicId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PictureSuggestedResponse other) {
      if (other == null) {
        return;
      }
      if (other.ThumbnailUrl.Length != 0) {
        ThumbnailUrl = other.ThumbnailUrl;
      }
      if (other.PicUrl.Length != 0) {
        PicUrl = other.PicUrl;
      }
      if (other.picId_ != null) {
        if (picId_ == null) {
          PicId = new global::Common.XiUuid();
        }
        PicId.MergeFrom(other.PicId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ThumbnailUrl = input.ReadString();
            break;
          }
          case 26: {
            PicUrl = input.ReadString();
            break;
          }
          case 42: {
            if (picId_ == null) {
              PicId = new global::Common.XiUuid();
            }
            input.ReadMessage(PicId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ThumbnailUrl = input.ReadString();
            break;
          }
          case 26: {
            PicUrl = input.ReadString();
            break;
          }
          case 42: {
            if (picId_ == null) {
              PicId = new global::Common.XiUuid();
            }
            input.ReadMessage(PicId);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Generic container for any kind of reply that's made using a custom keyboard.
  /// Each keyboard should define its own reply message type that is sent in the event of a reply
  /// directly from interacting with that keyboard.
  /// </summary>
  public sealed partial class KeyboardReplyAttachment : pb::IMessage<KeyboardReplyAttachment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyboardReplyAttachment> _parser = new pb::MessageParser<KeyboardReplyAttachment>(() => new KeyboardReplyAttachment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KeyboardReplyAttachment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyboardReplyAttachment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyboardReplyAttachment(KeyboardReplyAttachment other) : this() {
      switch (other.TypeCase) {
        case TypeOneofCase.SuggestedReply:
          SuggestedReply = other.SuggestedReply.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KeyboardReplyAttachment Clone() {
      return new KeyboardReplyAttachment(this);
    }

    /// <summary>Field number for the "suggested_reply" field.</summary>
    public const int SuggestedReplyFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.SuggestedReply SuggestedReply {
      get { return typeCase_ == TypeOneofCase.SuggestedReply ? (global::Common.Messagepath.V1.SuggestedReply) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.SuggestedReply;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      SuggestedReply = 1,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KeyboardReplyAttachment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KeyboardReplyAttachment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SuggestedReply, other.SuggestedReply)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeCase_ == TypeOneofCase.SuggestedReply) hash ^= SuggestedReply.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (typeCase_ == TypeOneofCase.SuggestedReply) {
        output.WriteRawTag(10);
        output.WriteMessage(SuggestedReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (typeCase_ == TypeOneofCase.SuggestedReply) {
        output.WriteRawTag(10);
        output.WriteMessage(SuggestedReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeCase_ == TypeOneofCase.SuggestedReply) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SuggestedReply);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KeyboardReplyAttachment other) {
      if (other == null) {
        return;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.SuggestedReply:
          if (SuggestedReply == null) {
            SuggestedReply = new global::Common.Messagepath.V1.SuggestedReply();
          }
          SuggestedReply.MergeFrom(other.SuggestedReply);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Common.Messagepath.V1.SuggestedReply subBuilder = new global::Common.Messagepath.V1.SuggestedReply();
            if (typeCase_ == TypeOneofCase.SuggestedReply) {
              subBuilder.MergeFrom(SuggestedReply);
            }
            input.ReadMessage(subBuilder);
            SuggestedReply = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Common.Messagepath.V1.SuggestedReply subBuilder = new global::Common.Messagepath.V1.SuggestedReply();
            if (typeCase_ == TypeOneofCase.SuggestedReply) {
              subBuilder.MergeFrom(SuggestedReply);
            }
            input.ReadMessage(subBuilder);
            SuggestedReply = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The entity that is returned to the Bot Platform when a user has selected a response that was
  /// provided in a bot-supplied suggested response keyboard.
  /// </summary>
  public sealed partial class SuggestedReply : pb::IMessage<SuggestedReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SuggestedReply> _parser = new pb::MessageParser<SuggestedReply>(() => new SuggestedReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SuggestedReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestedReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestedReply(SuggestedReply other) : this() {
      metadata_ = other.metadata_;
      switch (other.TypeCase) {
        case TypeOneofCase.TextReply:
          TextReply = other.TextReply.Clone();
          break;
        case TypeOneofCase.PaymentReply:
          PaymentReply = other.PaymentReply.Clone();
          break;
        case TypeOneofCase.FriendPickerReply:
          FriendPickerReply = other.FriendPickerReply.Clone();
          break;
        case TypeOneofCase.PictureReply:
          PictureReply = other.PictureReply.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SuggestedReply Clone() {
      return new SuggestedReply(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private string metadata_ = "";
    /// <summary>
    /// Metadata field as provided, verbatim, from the the suggested response item that was provided
    /// to the client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Metadata {
      get { return metadata_; }
      set {
        metadata_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text_reply" field.</summary>
    public const int TextReplyFieldNumber = 32;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.TextSuggestedReply TextReply {
      get { return typeCase_ == TypeOneofCase.TextReply ? (global::Common.Messagepath.V1.TextSuggestedReply) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.TextReply;
      }
    }

    /// <summary>Field number for the "payment_reply" field.</summary>
    public const int PaymentReplyFieldNumber = 33;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.PaymentSuggestedReply PaymentReply {
      get { return typeCase_ == TypeOneofCase.PaymentReply ? (global::Common.Messagepath.V1.PaymentSuggestedReply) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.PaymentReply;
      }
    }

    /// <summary>Field number for the "friend_picker_reply" field.</summary>
    public const int FriendPickerReplyFieldNumber = 34;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.FriendPickerSuggestedReply FriendPickerReply {
      get { return typeCase_ == TypeOneofCase.FriendPickerReply ? (global::Common.Messagepath.V1.FriendPickerSuggestedReply) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.FriendPickerReply;
      }
    }

    /// <summary>Field number for the "picture_reply" field.</summary>
    public const int PictureReplyFieldNumber = 35;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.PictureSuggestedReply PictureReply {
      get { return typeCase_ == TypeOneofCase.PictureReply ? (global::Common.Messagepath.V1.PictureSuggestedReply) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.PictureReply;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      TextReply = 32,
      PaymentReply = 33,
      FriendPickerReply = 34,
      PictureReply = 35,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SuggestedReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SuggestedReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Metadata != other.Metadata) return false;
      if (!object.Equals(TextReply, other.TextReply)) return false;
      if (!object.Equals(PaymentReply, other.PaymentReply)) return false;
      if (!object.Equals(FriendPickerReply, other.FriendPickerReply)) return false;
      if (!object.Equals(PictureReply, other.PictureReply)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Metadata.Length != 0) hash ^= Metadata.GetHashCode();
      if (typeCase_ == TypeOneofCase.TextReply) hash ^= TextReply.GetHashCode();
      if (typeCase_ == TypeOneofCase.PaymentReply) hash ^= PaymentReply.GetHashCode();
      if (typeCase_ == TypeOneofCase.FriendPickerReply) hash ^= FriendPickerReply.GetHashCode();
      if (typeCase_ == TypeOneofCase.PictureReply) hash ^= PictureReply.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Metadata.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Metadata);
      }
      if (typeCase_ == TypeOneofCase.TextReply) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(TextReply);
      }
      if (typeCase_ == TypeOneofCase.PaymentReply) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(PaymentReply);
      }
      if (typeCase_ == TypeOneofCase.FriendPickerReply) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(FriendPickerReply);
      }
      if (typeCase_ == TypeOneofCase.PictureReply) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(PictureReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Metadata.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Metadata);
      }
      if (typeCase_ == TypeOneofCase.TextReply) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(TextReply);
      }
      if (typeCase_ == TypeOneofCase.PaymentReply) {
        output.WriteRawTag(138, 2);
        output.WriteMessage(PaymentReply);
      }
      if (typeCase_ == TypeOneofCase.FriendPickerReply) {
        output.WriteRawTag(146, 2);
        output.WriteMessage(FriendPickerReply);
      }
      if (typeCase_ == TypeOneofCase.PictureReply) {
        output.WriteRawTag(154, 2);
        output.WriteMessage(PictureReply);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Metadata.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Metadata);
      }
      if (typeCase_ == TypeOneofCase.TextReply) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TextReply);
      }
      if (typeCase_ == TypeOneofCase.PaymentReply) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PaymentReply);
      }
      if (typeCase_ == TypeOneofCase.FriendPickerReply) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(FriendPickerReply);
      }
      if (typeCase_ == TypeOneofCase.PictureReply) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PictureReply);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SuggestedReply other) {
      if (other == null) {
        return;
      }
      if (other.Metadata.Length != 0) {
        Metadata = other.Metadata;
      }
      switch (other.TypeCase) {
        case TypeOneofCase.TextReply:
          if (TextReply == null) {
            TextReply = new global::Common.Messagepath.V1.TextSuggestedReply();
          }
          TextReply.MergeFrom(other.TextReply);
          break;
        case TypeOneofCase.PaymentReply:
          if (PaymentReply == null) {
            PaymentReply = new global::Common.Messagepath.V1.PaymentSuggestedReply();
          }
          PaymentReply.MergeFrom(other.PaymentReply);
          break;
        case TypeOneofCase.FriendPickerReply:
          if (FriendPickerReply == null) {
            FriendPickerReply = new global::Common.Messagepath.V1.FriendPickerSuggestedReply();
          }
          FriendPickerReply.MergeFrom(other.FriendPickerReply);
          break;
        case TypeOneofCase.PictureReply:
          if (PictureReply == null) {
            PictureReply = new global::Common.Messagepath.V1.PictureSuggestedReply();
          }
          PictureReply.MergeFrom(other.PictureReply);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Metadata = input.ReadString();
            break;
          }
          case 258: {
            global::Common.Messagepath.V1.TextSuggestedReply subBuilder = new global::Common.Messagepath.V1.TextSuggestedReply();
            if (typeCase_ == TypeOneofCase.TextReply) {
              subBuilder.MergeFrom(TextReply);
            }
            input.ReadMessage(subBuilder);
            TextReply = subBuilder;
            break;
          }
          case 266: {
            global::Common.Messagepath.V1.PaymentSuggestedReply subBuilder = new global::Common.Messagepath.V1.PaymentSuggestedReply();
            if (typeCase_ == TypeOneofCase.PaymentReply) {
              subBuilder.MergeFrom(PaymentReply);
            }
            input.ReadMessage(subBuilder);
            PaymentReply = subBuilder;
            break;
          }
          case 274: {
            global::Common.Messagepath.V1.FriendPickerSuggestedReply subBuilder = new global::Common.Messagepath.V1.FriendPickerSuggestedReply();
            if (typeCase_ == TypeOneofCase.FriendPickerReply) {
              subBuilder.MergeFrom(FriendPickerReply);
            }
            input.ReadMessage(subBuilder);
            FriendPickerReply = subBuilder;
            break;
          }
          case 282: {
            global::Common.Messagepath.V1.PictureSuggestedReply subBuilder = new global::Common.Messagepath.V1.PictureSuggestedReply();
            if (typeCase_ == TypeOneofCase.PictureReply) {
              subBuilder.MergeFrom(PictureReply);
            }
            input.ReadMessage(subBuilder);
            PictureReply = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Metadata = input.ReadString();
            break;
          }
          case 258: {
            global::Common.Messagepath.V1.TextSuggestedReply subBuilder = new global::Common.Messagepath.V1.TextSuggestedReply();
            if (typeCase_ == TypeOneofCase.TextReply) {
              subBuilder.MergeFrom(TextReply);
            }
            input.ReadMessage(subBuilder);
            TextReply = subBuilder;
            break;
          }
          case 266: {
            global::Common.Messagepath.V1.PaymentSuggestedReply subBuilder = new global::Common.Messagepath.V1.PaymentSuggestedReply();
            if (typeCase_ == TypeOneofCase.PaymentReply) {
              subBuilder.MergeFrom(PaymentReply);
            }
            input.ReadMessage(subBuilder);
            PaymentReply = subBuilder;
            break;
          }
          case 274: {
            global::Common.Messagepath.V1.FriendPickerSuggestedReply subBuilder = new global::Common.Messagepath.V1.FriendPickerSuggestedReply();
            if (typeCase_ == TypeOneofCase.FriendPickerReply) {
              subBuilder.MergeFrom(FriendPickerReply);
            }
            input.ReadMessage(subBuilder);
            FriendPickerReply = subBuilder;
            break;
          }
          case 282: {
            global::Common.Messagepath.V1.PictureSuggestedReply subBuilder = new global::Common.Messagepath.V1.PictureSuggestedReply();
            if (typeCase_ == TypeOneofCase.PictureReply) {
              subBuilder.MergeFrom(PictureReply);
            }
            input.ReadMessage(subBuilder);
            PictureReply = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Empty object that exists solely for the purpose of parity with the SuggestedResponseItem
  /// definition.
  ///
  /// Fields may be added in the future, but as of Sept 2016, there is nothing that needs to be
  /// specifically forwarded on for text suggested replies.
  ///
  /// The presence of this field is not required if replying using a text suggested response.
  /// </summary>
  public sealed partial class TextSuggestedReply : pb::IMessage<TextSuggestedReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextSuggestedReply> _parser = new pb::MessageParser<TextSuggestedReply>(() => new TextSuggestedReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextSuggestedReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextSuggestedReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextSuggestedReply(TextSuggestedReply other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextSuggestedReply Clone() {
      return new TextSuggestedReply(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextSuggestedReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextSuggestedReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextSuggestedReply other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The reply process of Payments uses a mechanism that exists off the standard message path.
  ///
  /// This message type is provided for the event that this process is consolidated into the standard
  /// message path.
  /// Fields may be added in the future, but as of Sept 2016, there is nothing that needs to be
  /// specifically forwarded on for payment suggested replies.
  ///
  /// The presence of this field is not required if replying using a payment suggested response.
  /// </summary>
  public sealed partial class PaymentSuggestedReply : pb::IMessage<PaymentSuggestedReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PaymentSuggestedReply> _parser = new pb::MessageParser<PaymentSuggestedReply>(() => new PaymentSuggestedReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PaymentSuggestedReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentSuggestedReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentSuggestedReply(PaymentSuggestedReply other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PaymentSuggestedReply Clone() {
      return new PaymentSuggestedReply(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PaymentSuggestedReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PaymentSuggestedReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PaymentSuggestedReply other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Reply specific for responses created from friend picker suggested responses.
  /// </summary>
  public sealed partial class FriendPickerSuggestedReply : pb::IMessage<FriendPickerSuggestedReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FriendPickerSuggestedReply> _parser = new pb::MessageParser<FriendPickerSuggestedReply>(() => new FriendPickerSuggestedReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FriendPickerSuggestedReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendPickerSuggestedReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendPickerSuggestedReply(FriendPickerSuggestedReply other) : this() {
      picked_ = other.picked_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FriendPickerSuggestedReply Clone() {
      return new FriendPickerSuggestedReply(this);
    }

    /// <summary>Field number for the "picked" field.</summary>
    public const int PickedFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Common.XiBareUserJid> _repeated_picked_codec
        = pb::FieldCodec.ForMessage(10, global::Common.XiBareUserJid.Parser);
    private readonly pbc::RepeatedField<global::Common.XiBareUserJid> picked_ = new pbc::RepeatedField<global::Common.XiBareUserJid>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.XiBareUserJid> Picked {
      get { return picked_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FriendPickerSuggestedReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FriendPickerSuggestedReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!picked_.Equals(other.picked_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= picked_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      picked_.WriteTo(output, _repeated_picked_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      picked_.WriteTo(ref output, _repeated_picked_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += picked_.CalculateSize(_repeated_picked_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FriendPickerSuggestedReply other) {
      if (other == null) {
        return;
      }
      picked_.Add(other.picked_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            picked_.AddEntriesFrom(input, _repeated_picked_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            picked_.AddEntriesFrom(ref input, _repeated_picked_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Reply specific for picture suggested responses.
  /// </summary>
  public sealed partial class PictureSuggestedReply : pb::IMessage<PictureSuggestedReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PictureSuggestedReply> _parser = new pb::MessageParser<PictureSuggestedReply>(() => new PictureSuggestedReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PictureSuggestedReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.KeyboardsReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureSuggestedReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureSuggestedReply(PictureSuggestedReply other) : this() {
      picId_ = other.picId_ != null ? other.picId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PictureSuggestedReply Clone() {
      return new PictureSuggestedReply(this);
    }

    /// <summary>Field number for the "pic_id" field.</summary>
    public const int PicIdFieldNumber = 5;
    private global::Common.XiUuid picId_;
    /// <summary>
    /// The original pic ID as was sent in the picture suggested response that the user actioned
    /// upon.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiUuid PicId {
      get { return picId_; }
      set {
        picId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PictureSuggestedReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PictureSuggestedReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PicId, other.PicId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (picId_ != null) hash ^= PicId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (picId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (picId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PicId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (picId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PicId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PictureSuggestedReply other) {
      if (other == null) {
        return;
      }
      if (other.picId_ != null) {
        if (picId_ == null) {
          PicId = new global::Common.XiUuid();
        }
        PicId.MergeFrom(other.PicId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 42: {
            if (picId_ == null) {
              PicId = new global::Common.XiUuid();
            }
            input.ReadMessage(PicId);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 42: {
            if (picId_ == null) {
              PicId = new global::Common.XiUuid();
            }
            input.ReadMessage(PicId);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
