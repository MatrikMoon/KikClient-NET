// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: group_search_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mobile.Groups.V1 {

  /// <summary>Holder for reflection information generated from group_search_service.proto</summary>
  public static partial class GroupSearchServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for group_search_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GroupSearchServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpncm91cF9zZWFyY2hfc2VydmljZS5wcm90bxIQbW9iaWxlLmdyb3Vwcy52",
            "MRoSY29tbW9uX21vZGVsLnByb3RvGhlwcm90b2J1Zl92YWxpZGF0aW9uLnBy",
            "b3RvGh1ncm91cHMvdjEvZ3JvdXBzX2NvbW1vbi5wcm90bxofZ29vZ2xlL3By",
            "b3RvYnVmL3RpbWVzdGFtcC5wcm90byIyChRQdWJsaWNHcm91cEpvaW5Ub2tl",
            "bhIaCgV0b2tlbhgBIAEoDEILyp0lBwgBKAEwgCgiQQoRRmluZEdyb3Vwc1Jl",
            "cXVlc3QSLAoFcXVlcnkYASABKAlCHcqdJRkIARIVXltBLVphLXowLTkuX117",
            "MSwzMn0kIuABChJGaW5kR3JvdXBzUmVzcG9uc2USOwoGcmVzdWx0GAEgASgO",
            "MisubW9iaWxlLmdyb3Vwcy52MS5GaW5kR3JvdXBzUmVzcG9uc2UuUmVzdWx0",
            "Ej8KBW1hdGNoGAIgAygLMiUubW9iaWxlLmdyb3Vwcy52MS5MaW1pdGVkR3Jv",
            "dXBEZXRhaWxzQgnKnSUFCACAARkSIQoZaXNfYXZhaWxhYmxlX2Zvcl9jcmVh",
            "dGlvbhgDIAEoCCIpCgZSZXN1bHQSBgoCT0sQABIXChNSQVRFX0xJTUlUX0VY",
            "Q0VFREVEEAEisAIKE0xpbWl0ZWRHcm91cERldGFpbHMSJwoDamlkGAEgASgL",
            "MhIuY29tbW9uLlhpR3JvdXBKaWRCBsqdJQIIABJACgxkaXNwbGF5X2RhdGEY",
            "AiABKAsyIi5jb21tb24uZ3JvdXBzLnYxLkdyb3VwRGlzcGxheURhdGFCBsqd",
            "JQIIABIUCgxtZW1iZXJfY291bnQYAyABKA0SPgoSbGFzdF9hY3Rpdml0eV90",
            "aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIGyp0lAggA",
            "EhYKDm1heF9ncm91cF9zaXplGAUgASgNEkAKEGdyb3VwX2pvaW5fdG9rZW4Y",
            "ZCABKAsyJi5tb2JpbGUuZ3JvdXBzLnYxLlB1YmxpY0dyb3VwSm9pblRva2Vu",
            "MmgKC0dyb3VwU2VhcmNoElkKCkZpbmRHcm91cHMSIy5tb2JpbGUuZ3JvdXBz",
            "LnYxLkZpbmRHcm91cHNSZXF1ZXN0GiQubW9iaWxlLmdyb3Vwcy52MS5GaW5k",
            "R3JvdXBzUmVzcG9uc2UiAEJcCg5jb20ua2lrLmdyb3Vwc1pKZ2l0aHViLmNv",
            "bS9raWtpbnRlcmFjdGl2ZS94aXBoaWFzLWFwaS1tb2JpbGUvZ2VuZXJhdGVk",
            "L2dvL2dyb3Vwcy92MTtncm91cHNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Common.CommonModelReflection.Descriptor, global::Kik.Validation.ProtobufValidationReflection.Descriptor, global::Common.Groups.V1.GroupsCommonReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Groups.V1.PublicGroupJoinToken), global::Mobile.Groups.V1.PublicGroupJoinToken.Parser, new[]{ "Token" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Groups.V1.FindGroupsRequest), global::Mobile.Groups.V1.FindGroupsRequest.Parser, new[]{ "Query" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Groups.V1.FindGroupsResponse), global::Mobile.Groups.V1.FindGroupsResponse.Parser, new[]{ "Result", "Match", "IsAvailableForCreation" }, null, new[]{ typeof(global::Mobile.Groups.V1.FindGroupsResponse.Types.Result) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobile.Groups.V1.LimitedGroupDetails), global::Mobile.Groups.V1.LimitedGroupDetails.Parser, new[]{ "Jid", "DisplayData", "MemberCount", "LastActivityTime", "MaxGroupSize", "GroupJoinToken" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class PublicGroupJoinToken : pb::IMessage<PublicGroupJoinToken>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PublicGroupJoinToken> _parser = new pb::MessageParser<PublicGroupJoinToken>(() => new PublicGroupJoinToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PublicGroupJoinToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Groups.V1.GroupSearchServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicGroupJoinToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicGroupJoinToken(PublicGroupJoinToken other) : this() {
      token_ = other.token_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PublicGroupJoinToken Clone() {
      return new PublicGroupJoinToken(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private pb::ByteString token_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PublicGroupJoinToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PublicGroupJoinToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Token);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PublicGroupJoinToken other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Request for group details, given a simple query string.
  /// </summary>
  public sealed partial class FindGroupsRequest : pb::IMessage<FindGroupsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FindGroupsRequest> _parser = new pb::MessageParser<FindGroupsRequest>(() => new FindGroupsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindGroupsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Groups.V1.GroupSearchServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindGroupsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindGroupsRequest(FindGroupsRequest other) : this() {
      query_ = other.query_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindGroupsRequest Clone() {
      return new FindGroupsRequest(this);
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 1;
    private string query_ = "";
    /// <summary>
    /// A simple string search containing a potential portion of a group hashtag.
    /// This string does NOT contain special characters to indicate wildcards.
    /// Note that this string is specified WITHOUT a '#' character prefix
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindGroupsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindGroupsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Query != other.Query) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Query.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Query.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindGroupsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Query = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Query = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Response for a FindGroups request. Provides either an exact match or availability
  /// of the search string, as well as a filtered series of other groups that
  /// partially match the search string.
  /// </summary>
  public sealed partial class FindGroupsResponse : pb::IMessage<FindGroupsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<FindGroupsResponse> _parser = new pb::MessageParser<FindGroupsResponse>(() => new FindGroupsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindGroupsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Groups.V1.GroupSearchServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindGroupsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindGroupsResponse(FindGroupsResponse other) : this() {
      result_ = other.result_;
      match_ = other.match_.Clone();
      isAvailableForCreation_ = other.isAvailableForCreation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindGroupsResponse Clone() {
      return new FindGroupsResponse(this);
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::Mobile.Groups.V1.FindGroupsResponse.Types.Result result_ = global::Mobile.Groups.V1.FindGroupsResponse.Types.Result.Ok;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobile.Groups.V1.FindGroupsResponse.Types.Result Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "match" field.</summary>
    public const int MatchFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mobile.Groups.V1.LimitedGroupDetails> _repeated_match_codec
        = pb::FieldCodec.ForMessage(18, global::Mobile.Groups.V1.LimitedGroupDetails.Parser);
    private readonly pbc::RepeatedField<global::Mobile.Groups.V1.LimitedGroupDetails> match_ = new pbc::RepeatedField<global::Mobile.Groups.V1.LimitedGroupDetails>();
    /// <summary>
    /// Groups that match the search request.  If there is an exact match, it
    /// will be the first match record returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobile.Groups.V1.LimitedGroupDetails> Match {
      get { return match_; }
    }

    /// <summary>Field number for the "is_available_for_creation" field.</summary>
    public const int IsAvailableForCreationFieldNumber = 3;
    private bool isAvailableForCreation_;
    /// <summary>
    /// Optional flag to indicate if the exact search term is available for use
    /// as the hashtag in a public group creation request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAvailableForCreation {
      get { return isAvailableForCreation_; }
      set {
        isAvailableForCreation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindGroupsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindGroupsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if(!match_.Equals(other.match_)) return false;
      if (IsAvailableForCreation != other.IsAvailableForCreation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != global::Mobile.Groups.V1.FindGroupsResponse.Types.Result.Ok) hash ^= Result.GetHashCode();
      hash ^= match_.GetHashCode();
      if (IsAvailableForCreation != false) hash ^= IsAvailableForCreation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Result != global::Mobile.Groups.V1.FindGroupsResponse.Types.Result.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      match_.WriteTo(output, _repeated_match_codec);
      if (IsAvailableForCreation != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsAvailableForCreation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Result != global::Mobile.Groups.V1.FindGroupsResponse.Types.Result.Ok) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Result);
      }
      match_.WriteTo(ref output, _repeated_match_codec);
      if (IsAvailableForCreation != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsAvailableForCreation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != global::Mobile.Groups.V1.FindGroupsResponse.Types.Result.Ok) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      size += match_.CalculateSize(_repeated_match_codec);
      if (IsAvailableForCreation != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindGroupsResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != global::Mobile.Groups.V1.FindGroupsResponse.Types.Result.Ok) {
        Result = other.Result;
      }
      match_.Add(other.match_);
      if (other.IsAvailableForCreation != false) {
        IsAvailableForCreation = other.IsAvailableForCreation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = (global::Mobile.Groups.V1.FindGroupsResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            match_.AddEntriesFrom(input, _repeated_match_codec);
            break;
          }
          case 24: {
            IsAvailableForCreation = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Result = (global::Mobile.Groups.V1.FindGroupsResponse.Types.Result) input.ReadEnum();
            break;
          }
          case 18: {
            match_.AddEntriesFrom(ref input, _repeated_match_codec);
            break;
          }
          case 24: {
            IsAvailableForCreation = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the FindGroupsResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Result {
        [pbr::OriginalName("OK")] Ok = 0,
        [pbr::OriginalName("RATE_LIMIT_EXCEEDED")] RateLimitExceeded = 1,
      }

    }
    #endregion

  }

  /// <summary>
  ///
  /// Group details, containing only enough details to provide display details of that group
  /// </summary>
  public sealed partial class LimitedGroupDetails : pb::IMessage<LimitedGroupDetails>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LimitedGroupDetails> _parser = new pb::MessageParser<LimitedGroupDetails>(() => new LimitedGroupDetails());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LimitedGroupDetails> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobile.Groups.V1.GroupSearchServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LimitedGroupDetails() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LimitedGroupDetails(LimitedGroupDetails other) : this() {
      jid_ = other.jid_ != null ? other.jid_.Clone() : null;
      displayData_ = other.displayData_ != null ? other.displayData_.Clone() : null;
      memberCount_ = other.memberCount_;
      lastActivityTime_ = other.lastActivityTime_ != null ? other.lastActivityTime_.Clone() : null;
      maxGroupSize_ = other.maxGroupSize_;
      groupJoinToken_ = other.groupJoinToken_ != null ? other.groupJoinToken_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LimitedGroupDetails Clone() {
      return new LimitedGroupDetails(this);
    }

    /// <summary>Field number for the "jid" field.</summary>
    public const int JidFieldNumber = 1;
    private global::Common.XiGroupJid jid_;
    /// <summary>
    /// ID of the group.
    /// NOTE: This is being kept as Optional, as the group join token may render
    ///       it obsolete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiGroupJid Jid {
      get { return jid_; }
      set {
        jid_ = value;
      }
    }

    /// <summary>Field number for the "display_data" field.</summary>
    public const int DisplayDataFieldNumber = 2;
    private global::Common.Groups.V1.GroupDisplayData displayData_;
    /// <summary>
    /// Display data of the group, including hashtag, display name, and display
    /// url components.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Groups.V1.GroupDisplayData DisplayData {
      get { return displayData_; }
      set {
        displayData_ = value;
      }
    }

    /// <summary>Field number for the "member_count" field.</summary>
    public const int MemberCountFieldNumber = 3;
    private uint memberCount_;
    /// <summary>
    /// Current count of members in the group
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MemberCount {
      get { return memberCount_; }
      set {
        memberCount_ = value;
      }
    }

    /// <summary>Field number for the "last_activity_time" field.</summary>
    public const int LastActivityTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastActivityTime_;
    /// <summary>
    /// The time of the last group activity. If no last activity time was found the field will be empty
    /// There is no guarantee regarding accuracy of this time - it means that at some point the group search service
    /// was told that this group had activity at this time, but there may have been activity since then
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastActivityTime {
      get { return lastActivityTime_; }
      set {
        lastActivityTime_ = value;
      }
    }

    /// <summary>Field number for the "max_group_size" field.</summary>
    public const int MaxGroupSizeFieldNumber = 5;
    private uint maxGroupSize_;
    /// <summary>
    /// Maximum number of members group can contain at the present time.
    /// Expect that this can change over time for a given group as we work towards larger groups
    /// therefore, caching these values for a period of time on the order of minutes should be
    /// ok, but it is not recommended to cache them for hours, and definitely not days
    /// This value wouldn't normally be 0, but if it was, assume that it means there's a problem with
    /// the public groups for which the size is 0 (which would probably be all of them) and that
    /// they should be not shown to users.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxGroupSize {
      get { return maxGroupSize_; }
      set {
        maxGroupSize_ = value;
      }
    }

    /// <summary>Field number for the "group_join_token" field.</summary>
    public const int GroupJoinTokenFieldNumber = 100;
    private global::Mobile.Groups.V1.PublicGroupJoinToken groupJoinToken_;
    /// <summary>
    /// Token which must be provided in order to join this group directly.
    /// The byte contents of this token must be base64-encoded and provided
    /// in the kik-server group join stanza in order to be successful in joining
    /// the group.
    /// * Provides additional tracking capability in analytics to connect searches
    ///   to group joins
    /// * Provides additional security possibilities by limiting the options spammers
    ///   have in harvesting users from groups (token is only useful to the user
    ///   that received it, easier to apply rate limits, etc.)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobile.Groups.V1.PublicGroupJoinToken GroupJoinToken {
      get { return groupJoinToken_; }
      set {
        groupJoinToken_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LimitedGroupDetails);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LimitedGroupDetails other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Jid, other.Jid)) return false;
      if (!object.Equals(DisplayData, other.DisplayData)) return false;
      if (MemberCount != other.MemberCount) return false;
      if (!object.Equals(LastActivityTime, other.LastActivityTime)) return false;
      if (MaxGroupSize != other.MaxGroupSize) return false;
      if (!object.Equals(GroupJoinToken, other.GroupJoinToken)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (jid_ != null) hash ^= Jid.GetHashCode();
      if (displayData_ != null) hash ^= DisplayData.GetHashCode();
      if (MemberCount != 0) hash ^= MemberCount.GetHashCode();
      if (lastActivityTime_ != null) hash ^= LastActivityTime.GetHashCode();
      if (MaxGroupSize != 0) hash ^= MaxGroupSize.GetHashCode();
      if (groupJoinToken_ != null) hash ^= GroupJoinToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (jid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jid);
      }
      if (displayData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DisplayData);
      }
      if (MemberCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MemberCount);
      }
      if (lastActivityTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastActivityTime);
      }
      if (MaxGroupSize != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MaxGroupSize);
      }
      if (groupJoinToken_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(GroupJoinToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (jid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jid);
      }
      if (displayData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DisplayData);
      }
      if (MemberCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(MemberCount);
      }
      if (lastActivityTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(LastActivityTime);
      }
      if (MaxGroupSize != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MaxGroupSize);
      }
      if (groupJoinToken_ != null) {
        output.WriteRawTag(162, 6);
        output.WriteMessage(GroupJoinToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (jid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Jid);
      }
      if (displayData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisplayData);
      }
      if (MemberCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MemberCount);
      }
      if (lastActivityTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastActivityTime);
      }
      if (MaxGroupSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxGroupSize);
      }
      if (groupJoinToken_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(GroupJoinToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LimitedGroupDetails other) {
      if (other == null) {
        return;
      }
      if (other.jid_ != null) {
        if (jid_ == null) {
          Jid = new global::Common.XiGroupJid();
        }
        Jid.MergeFrom(other.Jid);
      }
      if (other.displayData_ != null) {
        if (displayData_ == null) {
          DisplayData = new global::Common.Groups.V1.GroupDisplayData();
        }
        DisplayData.MergeFrom(other.DisplayData);
      }
      if (other.MemberCount != 0) {
        MemberCount = other.MemberCount;
      }
      if (other.lastActivityTime_ != null) {
        if (lastActivityTime_ == null) {
          LastActivityTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastActivityTime.MergeFrom(other.LastActivityTime);
      }
      if (other.MaxGroupSize != 0) {
        MaxGroupSize = other.MaxGroupSize;
      }
      if (other.groupJoinToken_ != null) {
        if (groupJoinToken_ == null) {
          GroupJoinToken = new global::Mobile.Groups.V1.PublicGroupJoinToken();
        }
        GroupJoinToken.MergeFrom(other.GroupJoinToken);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (jid_ == null) {
              Jid = new global::Common.XiGroupJid();
            }
            input.ReadMessage(Jid);
            break;
          }
          case 18: {
            if (displayData_ == null) {
              DisplayData = new global::Common.Groups.V1.GroupDisplayData();
            }
            input.ReadMessage(DisplayData);
            break;
          }
          case 24: {
            MemberCount = input.ReadUInt32();
            break;
          }
          case 34: {
            if (lastActivityTime_ == null) {
              LastActivityTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastActivityTime);
            break;
          }
          case 40: {
            MaxGroupSize = input.ReadUInt32();
            break;
          }
          case 802: {
            if (groupJoinToken_ == null) {
              GroupJoinToken = new global::Mobile.Groups.V1.PublicGroupJoinToken();
            }
            input.ReadMessage(GroupJoinToken);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (jid_ == null) {
              Jid = new global::Common.XiGroupJid();
            }
            input.ReadMessage(Jid);
            break;
          }
          case 18: {
            if (displayData_ == null) {
              DisplayData = new global::Common.Groups.V1.GroupDisplayData();
            }
            input.ReadMessage(DisplayData);
            break;
          }
          case 24: {
            MemberCount = input.ReadUInt32();
            break;
          }
          case 34: {
            if (lastActivityTime_ == null) {
              LastActivityTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastActivityTime);
            break;
          }
          case 40: {
            MaxGroupSize = input.ReadUInt32();
            break;
          }
          case 802: {
            if (groupJoinToken_ == null) {
              GroupJoinToken = new global::Mobile.Groups.V1.PublicGroupJoinToken();
            }
            input.ReadMessage(GroupJoinToken);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
