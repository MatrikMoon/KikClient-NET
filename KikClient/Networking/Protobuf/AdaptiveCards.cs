// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messagepath/v1/adaptive_cards.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common.Messagepath.V1 {

  /// <summary>Holder for reflection information generated from messagepath/v1/adaptive_cards.proto</summary>
  public static partial class AdaptiveCardsReflection {

    #region Descriptor
    /// <summary>File descriptor for messagepath/v1/adaptive_cards.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AdaptiveCardsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNtZXNzYWdlcGF0aC92MS9hZGFwdGl2ZV9jYXJkcy5wcm90bxIVY29tbW9u",
            "Lm1lc3NhZ2VwYXRoLnYxGhlwcm90b2J1Zl92YWxpZGF0aW9uLnByb3RvImYK",
            "FkFkYXB0aXZlQ2FyZEF0dGFjaG1lbnQSGwoHY2FyZF9pZBgBIAEoCUIIyp0l",
            "BCgBMEBIABIkCg9jYXJkX2RlZmluaXRpb24YAiABKAlCCcqdJQUoAjCQTkgA",
            "QgkKB2NvbnRlbnRCdwoZY29tLmtpay5tZXNzYWdlcGF0aC5tb2RlbFpTZ2l0",
            "aHViLmNvbS9raWtpbnRlcmFjdGl2ZS94aXBoaWFzLW1vZGVsLWNvbW1vbi9n",
            "ZW5lcmF0ZWQvZ28vbWVzc2FnZXBhdGg7bWVzc2FnZXBhdGiiAgRNUFRIYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Kik.Validation.ProtobufValidationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.AdaptiveCardAttachment), global::Common.Messagepath.V1.AdaptiveCardAttachment.Parser, new[]{ "CardId", "CardDefinition" }, new[]{ "Content" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// AdaptiveCardAttachment defines the mechanism that allows bots to send an adaptive card message
  /// defined using Microsoft's Adaptive Cards framework (see http://adaptivecards.io).
  ///
  /// By using this framework, developers can define a card in JSON composed of images, text, buttons
  /// and more using Microsoft's schema. These card definitions can be used across multiple platforms.
  ///
  /// This attachment should be used by the client to determine how to render an adaptive card message.
  /// </summary>
  public sealed partial class AdaptiveCardAttachment : pb::IMessage<AdaptiveCardAttachment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AdaptiveCardAttachment> _parser = new pb::MessageParser<AdaptiveCardAttachment>(() => new AdaptiveCardAttachment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AdaptiveCardAttachment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.AdaptiveCardsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdaptiveCardAttachment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdaptiveCardAttachment(AdaptiveCardAttachment other) : this() {
      switch (other.ContentCase) {
        case ContentOneofCase.CardId:
          CardId = other.CardId;
          break;
        case ContentOneofCase.CardDefinition:
          CardDefinition = other.CardDefinition;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AdaptiveCardAttachment Clone() {
      return new AdaptiveCardAttachment(this);
    }

    /// <summary>Field number for the "card_id" field.</summary>
    public const int CardIdFieldNumber = 1;
    /// <summary>
    /// The ID of the adaptive card definition stored on the bots platform. The client will use
    /// this ID to retrieve the JSON definition of the card from the bots platform and then
    /// render it.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardId {
      get { return contentCase_ == ContentOneofCase.CardId ? (string) content_ : ""; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentCase_ = ContentOneofCase.CardId;
      }
    }

    /// <summary>Field number for the "card_definition" field.</summary>
    public const int CardDefinitionFieldNumber = 2;
    /// <summary>
    /// The dump of the JSON adaptive card definition.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardDefinition {
      get { return contentCase_ == ContentOneofCase.CardDefinition ? (string) content_ : ""; }
      set {
        content_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        contentCase_ = ContentOneofCase.CardDefinition;
      }
    }

    private object content_;
    /// <summary>Enum of possible cases for the "content" oneof.</summary>
    public enum ContentOneofCase {
      None = 0,
      CardId = 1,
      CardDefinition = 2,
    }
    private ContentOneofCase contentCase_ = ContentOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ContentOneofCase ContentCase {
      get { return contentCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearContent() {
      contentCase_ = ContentOneofCase.None;
      content_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AdaptiveCardAttachment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AdaptiveCardAttachment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardId != other.CardId) return false;
      if (CardDefinition != other.CardDefinition) return false;
      if (ContentCase != other.ContentCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (contentCase_ == ContentOneofCase.CardId) hash ^= CardId.GetHashCode();
      if (contentCase_ == ContentOneofCase.CardDefinition) hash ^= CardDefinition.GetHashCode();
      hash ^= (int) contentCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (contentCase_ == ContentOneofCase.CardId) {
        output.WriteRawTag(10);
        output.WriteString(CardId);
      }
      if (contentCase_ == ContentOneofCase.CardDefinition) {
        output.WriteRawTag(18);
        output.WriteString(CardDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (contentCase_ == ContentOneofCase.CardId) {
        output.WriteRawTag(10);
        output.WriteString(CardId);
      }
      if (contentCase_ == ContentOneofCase.CardDefinition) {
        output.WriteRawTag(18);
        output.WriteString(CardDefinition);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (contentCase_ == ContentOneofCase.CardId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardId);
      }
      if (contentCase_ == ContentOneofCase.CardDefinition) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardDefinition);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AdaptiveCardAttachment other) {
      if (other == null) {
        return;
      }
      switch (other.ContentCase) {
        case ContentOneofCase.CardId:
          CardId = other.CardId;
          break;
        case ContentOneofCase.CardDefinition:
          CardDefinition = other.CardDefinition;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CardId = input.ReadString();
            break;
          }
          case 18: {
            CardDefinition = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CardId = input.ReadString();
            break;
          }
          case 18: {
            CardDefinition = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
