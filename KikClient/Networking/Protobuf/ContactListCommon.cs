// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: contactlist/v1/contact_list_common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common.Contactlist.V1 {

  /// <summary>Holder for reflection information generated from contactlist/v1/contact_list_common.proto</summary>
  public static partial class ContactListCommonReflection {

    #region Descriptor
    /// <summary>File descriptor for contactlist/v1/contact_list_common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ContactListCommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cihjb250YWN0bGlzdC92MS9jb250YWN0X2xpc3RfY29tbW9uLnByb3RvEhVj",
            "b21tb24uY29udGFjdGxpc3QudjEaEmNvbW1vbl9tb2RlbC5wcm90bxoZcHJv",
            "dG9idWZfdmFsaWRhdGlvbi5wcm90byKPAQoPVXNlclJlbGF0aW9uS2V5EjUK",
            "DnJlbGF0aW9uX293bmVyGAEgASgLMhUuY29tbW9uLlhpQmFyZVVzZXJKaWRC",
            "BsqdJQIIARJFCg9yZWxhdGlvbl9tZW1iZXIYAiABKAsyLC5jb21tb24uY29u",
            "dGFjdGxpc3QudjEuVXNlclJlbGF0aW9uTWVtYmVyS2V5InoKFVVzZXJSZWxh",
            "dGlvbk1lbWJlcktleRIpCgh1c2VyX2ppZBgBIAEoCzIVLmNvbW1vbi5YaUJh",
            "cmVVc2VySmlkSAASJwoJZ3JvdXBfamlkGAIgASgLMhIuY29tbW9uLlhpR3Jv",
            "dXBKaWRIAEINCgttZW1iZXJfa2luZCKGBwoRVXNlckZyaWVuZENvbnRleHQS",
            "IQoQY29udGV4dF90eXBlX3N0chgFIAEoCUIHyp0lAzDIARJKCgxjb250ZXh0",
            "X3R5cGUYASABKA4yNC5jb21tb24uY29udGFjdGxpc3QudjEuVXNlckZyaWVu",
            "ZENvbnRleHQuQ29udGV4dFR5cGUSIgoRcmVsYXRlZF9jYXJkX25hbWUYAiAB",
            "KAlCB8qdJQMwgCgSHAoLcmVsYXRlZF91cmwYAyABKAlCB8qdJQMwiCcSKQoN",
            "cmVsYXRlZF9ncm91cBgEIAEoCzISLmNvbW1vbi5YaUdyb3VwSmlkIpQFCgtD",
            "b250ZXh0VHlwZRILCgdERUZBVUxUEAASHAoYRVhQTElDSVRfVVNFUk5BTUVf",
            "U0VBUkNIEAESGgoWSU5MSU5FX1VTRVJOQU1FX1NFQVJDSBACEhMKD0lOTElO",
            "RV9QUk9NT1RFRBADEhIKDkZVWlpZX01BVENISU5HEAQSGQoVQUREUkVTU19C",
            "T09LX01BVENISU5HEAUSFwoTUFJPTU9URURfQ0hBVFNfTElTVBAGEg4KClRB",
            "TEtfVE9fQUQQBxISCg5GSU5EX1BFT1BMRV9BRBAIEhEKDUdST1VQX0FERF9B",
            "TEwQCRISCg5HUk9VUF9JTkZPX0FERBAKEg4KCldFQl9LSUtfTUUQCxIWChJX",
            "RUJfUFJPRklMRV9LSUtfTUUQDBIdChlDQVJEX1BST0ZJTEVfS0lLX1BST1RP",
            "Q09MEA0SGQoVQ0FSRF9TRU5EX0tJS19UT19VU0VSEA4SGgoWQ0FSRF9PUEVO",
            "X0NPTlZFUlNBVElPThAPEhUKEUNBUkRfT1BFTl9QUk9GSUxFEBASEQoNRlJJ",
            "RU5EX1BJQ0tFUhAREhQKEFVTRVJOQU1FX01FTlRJT04QEhIPCgtCT1RfTUVO",
            "VElPThATEhUKEUJPVF9NRU5USU9OX1JFUExZEBQSDAoIQk9UX1NIT1AQFRIU",
            "ChBHUk9VUF9NRU1CRVJfQUREEBYSFwoTR1JPVVBfSU5GT19NRU5VX0FERBAX",
            "EhIKDkdST1VQX01FTlVfQUREEBgSGAoUUFVMTF9VU0VSTkFNRV9TRUFSQ0gQ",
            "GRIbChdTRU5EX1RPX1VTRVJOQU1FX1NFQVJDSBAaEhQKEExJTktfQVRUUklC",
            "VVRJT04QGxISCg5TVUdHRVNUX0ZSSUVORBAcQn8KHGNvbS5raWsuY29udGFj",
            "dGxpc3QudjEubW9kZWxaVmdpdGh1Yi5jb20va2lraW50ZXJhY3RpdmUveGlw",
            "aGlhcy1tb2RlbC1jb21tb24vZ2VuZXJhdGVkL2dvL2NvbnRhY3RsaXN0L3Yx",
            "O2NvbnRhY3RsaXN0oAEBogIDQ05MYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Common.CommonModelReflection.Descriptor, global::Kik.Validation.ProtobufValidationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Contactlist.V1.UserRelationKey), global::Common.Contactlist.V1.UserRelationKey.Parser, new[]{ "RelationOwner", "RelationMember" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Contactlist.V1.UserRelationMemberKey), global::Common.Contactlist.V1.UserRelationMemberKey.Parser, new[]{ "UserJid", "GroupJid" }, new[]{ "MemberKind" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Contactlist.V1.UserFriendContext), global::Common.Contactlist.V1.UserFriendContext.Parser, new[]{ "ContextTypeStr", "ContextType", "RelatedCardName", "RelatedUrl", "RelatedGroup" }, null, new[]{ typeof(global::Common.Contactlist.V1.UserFriendContext.Types.ContextType) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A Key, defining a user/entity pair which have some form of relationship.
  /// </summary>
  public sealed partial class UserRelationKey : pb::IMessage<UserRelationKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRelationKey> _parser = new pb::MessageParser<UserRelationKey>(() => new UserRelationKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRelationKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Contactlist.V1.ContactListCommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRelationKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRelationKey(UserRelationKey other) : this() {
      relationOwner_ = other.relationOwner_ != null ? other.relationOwner_.Clone() : null;
      relationMember_ = other.relationMember_ != null ? other.relationMember_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRelationKey Clone() {
      return new UserRelationKey(this);
    }

    /// <summary>Field number for the "relation_owner" field.</summary>
    public const int RelationOwnerFieldNumber = 1;
    private global::Common.XiBareUserJid relationOwner_;
    /// <summary>
    /// Relationship Owner - i.e. the user which is maintiaining the relationship
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiBareUserJid RelationOwner {
      get { return relationOwner_; }
      set {
        relationOwner_ = value;
      }
    }

    /// <summary>Field number for the "relation_member" field.</summary>
    public const int RelationMemberFieldNumber = 2;
    private global::Common.Contactlist.V1.UserRelationMemberKey relationMember_;
    /// <summary>
    /// Related Entity - the entity for which the relation_owner is related somehow
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Contactlist.V1.UserRelationMemberKey RelationMember {
      get { return relationMember_; }
      set {
        relationMember_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRelationKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRelationKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RelationOwner, other.RelationOwner)) return false;
      if (!object.Equals(RelationMember, other.RelationMember)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (relationOwner_ != null) hash ^= RelationOwner.GetHashCode();
      if (relationMember_ != null) hash ^= RelationMember.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (relationOwner_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RelationOwner);
      }
      if (relationMember_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RelationMember);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (relationOwner_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RelationOwner);
      }
      if (relationMember_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(RelationMember);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (relationOwner_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelationOwner);
      }
      if (relationMember_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelationMember);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRelationKey other) {
      if (other == null) {
        return;
      }
      if (other.relationOwner_ != null) {
        if (relationOwner_ == null) {
          RelationOwner = new global::Common.XiBareUserJid();
        }
        RelationOwner.MergeFrom(other.RelationOwner);
      }
      if (other.relationMember_ != null) {
        if (relationMember_ == null) {
          RelationMember = new global::Common.Contactlist.V1.UserRelationMemberKey();
        }
        RelationMember.MergeFrom(other.RelationMember);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (relationOwner_ == null) {
              RelationOwner = new global::Common.XiBareUserJid();
            }
            input.ReadMessage(RelationOwner);
            break;
          }
          case 18: {
            if (relationMember_ == null) {
              RelationMember = new global::Common.Contactlist.V1.UserRelationMemberKey();
            }
            input.ReadMessage(RelationMember);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (relationOwner_ == null) {
              RelationOwner = new global::Common.XiBareUserJid();
            }
            input.ReadMessage(RelationOwner);
            break;
          }
          case 18: {
            if (relationMember_ == null) {
              RelationMember = new global::Common.Contactlist.V1.UserRelationMemberKey();
            }
            input.ReadMessage(RelationMember);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A User Relation Member - contains the details about the thing a user is/can be related to
  /// </summary>
  public sealed partial class UserRelationMemberKey : pb::IMessage<UserRelationMemberKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserRelationMemberKey> _parser = new pb::MessageParser<UserRelationMemberKey>(() => new UserRelationMemberKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserRelationMemberKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Contactlist.V1.ContactListCommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRelationMemberKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRelationMemberKey(UserRelationMemberKey other) : this() {
      switch (other.MemberKindCase) {
        case MemberKindOneofCase.UserJid:
          UserJid = other.UserJid.Clone();
          break;
        case MemberKindOneofCase.GroupJid:
          GroupJid = other.GroupJid.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserRelationMemberKey Clone() {
      return new UserRelationMemberKey(this);
    }

    /// <summary>Field number for the "user_jid" field.</summary>
    public const int UserJidFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiBareUserJid UserJid {
      get { return memberKindCase_ == MemberKindOneofCase.UserJid ? (global::Common.XiBareUserJid) memberKind_ : null; }
      set {
        memberKind_ = value;
        memberKindCase_ = value == null ? MemberKindOneofCase.None : MemberKindOneofCase.UserJid;
      }
    }

    /// <summary>Field number for the "group_jid" field.</summary>
    public const int GroupJidFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiGroupJid GroupJid {
      get { return memberKindCase_ == MemberKindOneofCase.GroupJid ? (global::Common.XiGroupJid) memberKind_ : null; }
      set {
        memberKind_ = value;
        memberKindCase_ = value == null ? MemberKindOneofCase.None : MemberKindOneofCase.GroupJid;
      }
    }

    private object memberKind_;
    /// <summary>Enum of possible cases for the "member_kind" oneof.</summary>
    public enum MemberKindOneofCase {
      None = 0,
      UserJid = 1,
      GroupJid = 2,
    }
    private MemberKindOneofCase memberKindCase_ = MemberKindOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MemberKindOneofCase MemberKindCase {
      get { return memberKindCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMemberKind() {
      memberKindCase_ = MemberKindOneofCase.None;
      memberKind_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserRelationMemberKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserRelationMemberKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserJid, other.UserJid)) return false;
      if (!object.Equals(GroupJid, other.GroupJid)) return false;
      if (MemberKindCase != other.MemberKindCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (memberKindCase_ == MemberKindOneofCase.UserJid) hash ^= UserJid.GetHashCode();
      if (memberKindCase_ == MemberKindOneofCase.GroupJid) hash ^= GroupJid.GetHashCode();
      hash ^= (int) memberKindCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (memberKindCase_ == MemberKindOneofCase.UserJid) {
        output.WriteRawTag(10);
        output.WriteMessage(UserJid);
      }
      if (memberKindCase_ == MemberKindOneofCase.GroupJid) {
        output.WriteRawTag(18);
        output.WriteMessage(GroupJid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (memberKindCase_ == MemberKindOneofCase.UserJid) {
        output.WriteRawTag(10);
        output.WriteMessage(UserJid);
      }
      if (memberKindCase_ == MemberKindOneofCase.GroupJid) {
        output.WriteRawTag(18);
        output.WriteMessage(GroupJid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (memberKindCase_ == MemberKindOneofCase.UserJid) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserJid);
      }
      if (memberKindCase_ == MemberKindOneofCase.GroupJid) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupJid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserRelationMemberKey other) {
      if (other == null) {
        return;
      }
      switch (other.MemberKindCase) {
        case MemberKindOneofCase.UserJid:
          if (UserJid == null) {
            UserJid = new global::Common.XiBareUserJid();
          }
          UserJid.MergeFrom(other.UserJid);
          break;
        case MemberKindOneofCase.GroupJid:
          if (GroupJid == null) {
            GroupJid = new global::Common.XiGroupJid();
          }
          GroupJid.MergeFrom(other.GroupJid);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Common.XiBareUserJid subBuilder = new global::Common.XiBareUserJid();
            if (memberKindCase_ == MemberKindOneofCase.UserJid) {
              subBuilder.MergeFrom(UserJid);
            }
            input.ReadMessage(subBuilder);
            UserJid = subBuilder;
            break;
          }
          case 18: {
            global::Common.XiGroupJid subBuilder = new global::Common.XiGroupJid();
            if (memberKindCase_ == MemberKindOneofCase.GroupJid) {
              subBuilder.MergeFrom(GroupJid);
            }
            input.ReadMessage(subBuilder);
            GroupJid = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Common.XiBareUserJid subBuilder = new global::Common.XiBareUserJid();
            if (memberKindCase_ == MemberKindOneofCase.UserJid) {
              subBuilder.MergeFrom(UserJid);
            }
            input.ReadMessage(subBuilder);
            UserJid = subBuilder;
            break;
          }
          case 18: {
            global::Common.XiGroupJid subBuilder = new global::Common.XiGroupJid();
            if (memberKindCase_ == MemberKindOneofCase.GroupJid) {
              subBuilder.MergeFrom(GroupJid);
            }
            input.ReadMessage(subBuilder);
            GroupJid = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Context Details for a user's friendship with another entity (eg: other user/group)
  /// </summary>
  public sealed partial class UserFriendContext : pb::IMessage<UserFriendContext>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<UserFriendContext> _parser = new pb::MessageParser<UserFriendContext>(() => new UserFriendContext());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserFriendContext> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Contactlist.V1.ContactListCommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFriendContext() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFriendContext(UserFriendContext other) : this() {
      contextTypeStr_ = other.contextTypeStr_;
      contextType_ = other.contextType_;
      relatedCardName_ = other.relatedCardName_;
      relatedUrl_ = other.relatedUrl_;
      relatedGroup_ = other.relatedGroup_ != null ? other.relatedGroup_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserFriendContext Clone() {
      return new UserFriendContext(this);
    }

    /// <summary>Field number for the "context_type_str" field.</summary>
    public const int ContextTypeStrFieldNumber = 5;
    private string contextTypeStr_ = "";
    /// <summary>
    /// The context of the relationship - i.e. how the user found the other / how the user was found
    /// This value must be one of the values from com.kik.plugin.FriendContextType in kik-server.
    /// NOTE: NOT modeling this as an enum due to the difficulty involved in adding new types to the list.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ContextTypeStr {
      get { return contextTypeStr_; }
      set {
        contextTypeStr_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "context_type" field.</summary>
    public const int ContextTypeFieldNumber = 1;
    private global::Common.Contactlist.V1.UserFriendContext.Types.ContextType contextType_ = global::Common.Contactlist.V1.UserFriendContext.Types.ContextType.Default;
    /// <summary>
    /// DEPRECATED. context type - migrating to string context_type_str
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Contactlist.V1.UserFriendContext.Types.ContextType ContextType {
      get { return contextType_; }
      set {
        contextType_ = value;
      }
    }

    /// <summary>Field number for the "related_card_name" field.</summary>
    public const int RelatedCardNameFieldNumber = 2;
    private string relatedCardName_ = "";
    /// <summary>
    /// Optional card name when the context type refers to a card case
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RelatedCardName {
      get { return relatedCardName_; }
      set {
        relatedCardName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "related_url" field.</summary>
    public const int RelatedUrlFieldNumber = 3;
    private string relatedUrl_ = "";
    /// <summary>
    /// Optional URL when the context type refers to web/card cases
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RelatedUrl {
      get { return relatedUrl_; }
      set {
        relatedUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "related_group" field.</summary>
    public const int RelatedGroupFieldNumber = 4;
    private global::Common.XiGroupJid relatedGroup_;
    /// <summary>
    /// Optional Group ID when the context type refers to a group case
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiGroupJid RelatedGroup {
      get { return relatedGroup_; }
      set {
        relatedGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserFriendContext);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserFriendContext other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContextTypeStr != other.ContextTypeStr) return false;
      if (ContextType != other.ContextType) return false;
      if (RelatedCardName != other.RelatedCardName) return false;
      if (RelatedUrl != other.RelatedUrl) return false;
      if (!object.Equals(RelatedGroup, other.RelatedGroup)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContextTypeStr.Length != 0) hash ^= ContextTypeStr.GetHashCode();
      if (ContextType != global::Common.Contactlist.V1.UserFriendContext.Types.ContextType.Default) hash ^= ContextType.GetHashCode();
      if (RelatedCardName.Length != 0) hash ^= RelatedCardName.GetHashCode();
      if (RelatedUrl.Length != 0) hash ^= RelatedUrl.GetHashCode();
      if (relatedGroup_ != null) hash ^= RelatedGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ContextType != global::Common.Contactlist.V1.UserFriendContext.Types.ContextType.Default) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ContextType);
      }
      if (RelatedCardName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RelatedCardName);
      }
      if (RelatedUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RelatedUrl);
      }
      if (relatedGroup_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RelatedGroup);
      }
      if (ContextTypeStr.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContextTypeStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ContextType != global::Common.Contactlist.V1.UserFriendContext.Types.ContextType.Default) {
        output.WriteRawTag(8);
        output.WriteEnum((int) ContextType);
      }
      if (RelatedCardName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RelatedCardName);
      }
      if (RelatedUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RelatedUrl);
      }
      if (relatedGroup_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RelatedGroup);
      }
      if (ContextTypeStr.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ContextTypeStr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContextTypeStr.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ContextTypeStr);
      }
      if (ContextType != global::Common.Contactlist.V1.UserFriendContext.Types.ContextType.Default) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ContextType);
      }
      if (RelatedCardName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelatedCardName);
      }
      if (RelatedUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RelatedUrl);
      }
      if (relatedGroup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RelatedGroup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserFriendContext other) {
      if (other == null) {
        return;
      }
      if (other.ContextTypeStr.Length != 0) {
        ContextTypeStr = other.ContextTypeStr;
      }
      if (other.ContextType != global::Common.Contactlist.V1.UserFriendContext.Types.ContextType.Default) {
        ContextType = other.ContextType;
      }
      if (other.RelatedCardName.Length != 0) {
        RelatedCardName = other.RelatedCardName;
      }
      if (other.RelatedUrl.Length != 0) {
        RelatedUrl = other.RelatedUrl;
      }
      if (other.relatedGroup_ != null) {
        if (relatedGroup_ == null) {
          RelatedGroup = new global::Common.XiGroupJid();
        }
        RelatedGroup.MergeFrom(other.RelatedGroup);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ContextType = (global::Common.Contactlist.V1.UserFriendContext.Types.ContextType) input.ReadEnum();
            break;
          }
          case 18: {
            RelatedCardName = input.ReadString();
            break;
          }
          case 26: {
            RelatedUrl = input.ReadString();
            break;
          }
          case 34: {
            if (relatedGroup_ == null) {
              RelatedGroup = new global::Common.XiGroupJid();
            }
            input.ReadMessage(RelatedGroup);
            break;
          }
          case 42: {
            ContextTypeStr = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ContextType = (global::Common.Contactlist.V1.UserFriendContext.Types.ContextType) input.ReadEnum();
            break;
          }
          case 18: {
            RelatedCardName = input.ReadString();
            break;
          }
          case 26: {
            RelatedUrl = input.ReadString();
            break;
          }
          case 34: {
            if (relatedGroup_ == null) {
              RelatedGroup = new global::Common.XiGroupJid();
            }
            input.ReadMessage(RelatedGroup);
            break;
          }
          case 42: {
            ContextTypeStr = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the UserFriendContext message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ContextType {
        [pbr::OriginalName("DEFAULT")] Default = 0,
        [pbr::OriginalName("EXPLICIT_USERNAME_SEARCH")] ExplicitUsernameSearch = 1,
        [pbr::OriginalName("INLINE_USERNAME_SEARCH")] InlineUsernameSearch = 2,
        [pbr::OriginalName("INLINE_PROMOTED")] InlinePromoted = 3,
        [pbr::OriginalName("FUZZY_MATCHING")] FuzzyMatching = 4,
        [pbr::OriginalName("ADDRESS_BOOK_MATCHING")] AddressBookMatching = 5,
        [pbr::OriginalName("PROMOTED_CHATS_LIST")] PromotedChatsList = 6,
        [pbr::OriginalName("TALK_TO_AD")] TalkToAd = 7,
        [pbr::OriginalName("FIND_PEOPLE_AD")] FindPeopleAd = 8,
        [pbr::OriginalName("GROUP_ADD_ALL")] GroupAddAll = 9,
        [pbr::OriginalName("GROUP_INFO_ADD")] GroupInfoAdd = 10,
        [pbr::OriginalName("WEB_KIK_ME")] WebKikMe = 11,
        [pbr::OriginalName("WEB_PROFILE_KIK_ME")] WebProfileKikMe = 12,
        [pbr::OriginalName("CARD_PROFILE_KIK_PROTOCOL")] CardProfileKikProtocol = 13,
        [pbr::OriginalName("CARD_SEND_KIK_TO_USER")] CardSendKikToUser = 14,
        [pbr::OriginalName("CARD_OPEN_CONVERSATION")] CardOpenConversation = 15,
        [pbr::OriginalName("CARD_OPEN_PROFILE")] CardOpenProfile = 16,
        [pbr::OriginalName("FRIEND_PICKER")] FriendPicker = 17,
        [pbr::OriginalName("USERNAME_MENTION")] UsernameMention = 18,
        [pbr::OriginalName("BOT_MENTION")] BotMention = 19,
        [pbr::OriginalName("BOT_MENTION_REPLY")] BotMentionReply = 20,
        [pbr::OriginalName("BOT_SHOP")] BotShop = 21,
        [pbr::OriginalName("GROUP_MEMBER_ADD")] GroupMemberAdd = 22,
        [pbr::OriginalName("GROUP_INFO_MENU_ADD")] GroupInfoMenuAdd = 23,
        [pbr::OriginalName("GROUP_MENU_ADD")] GroupMenuAdd = 24,
        [pbr::OriginalName("PULL_USERNAME_SEARCH")] PullUsernameSearch = 25,
        [pbr::OriginalName("SEND_TO_USERNAME_SEARCH")] SendToUsernameSearch = 26,
        [pbr::OriginalName("LINK_ATTRIBUTION")] LinkAttribution = 27,
        [pbr::OriginalName("SUGGEST_FRIEND")] SuggestFriend = 28,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
