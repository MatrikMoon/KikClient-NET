// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messagepath/v1/link_message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common.Messagepath.V1 {

  /// <summary>Holder for reflection information generated from messagepath/v1/link_message.proto</summary>
  public static partial class LinkMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for messagepath/v1/link_message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LinkMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiFtZXNzYWdlcGF0aC92MS9saW5rX21lc3NhZ2UucHJvdG8SFWNvbW1vbi5t",
            "ZXNzYWdlcGF0aC52MRoZcHJvdG9idWZfdmFsaWRhdGlvbi5wcm90bxoobWVz",
            "c2FnZXBhdGgvdjEvY29yZV9tZXNzYWdlX2NvbW1vbi5wcm90byLbAgoVTGlu",
            "a01lc3NhZ2VBdHRhY2htZW50EjwKBHVyaXMYASADKAsyIS5jb21tb24ubWVz",
            "c2FnZXBhdGgudjEuVXJpRWxlbWVudEILyp0lBwgBeAGAAQoSFgoFdGl0bGUY",
            "MiABKAlCB8qdJQMw6AcSFQoEdGV4dBgzIAEoCUIHyp0lAzDQDxI2CgdwaWN0",
            "dXJlGDQgASgLMiUuY29tbW9uLm1lc3NhZ2VwYXRoLnYxLlBpY3R1cmVFbGVt",
            "ZW50EkEKC2F0dHJpYnV0aW9uGDUgASgLMiwuY29tbW9uLm1lc3NhZ2VwYXRo",
            "LnYxLkF0dHJpYnV0aW9uQXR0YWNobWVudBJDCg5jb250ZW50X2xheW91dBg2",
            "IAEoCzIrLmNvbW1vbi5tZXNzYWdlcGF0aC52MS5Db250ZW50TGF5b3V0RWxl",
            "bWVudBIVCg1hbGxvd19mb3J3YXJkGDcgASgIQnoKGWNvbS5raWsubWVzc2Fn",
            "ZXBhdGgubW9kZWxaVmdpdGh1Yi5jb20va2lraW50ZXJhY3RpdmUveGlwaGlh",
            "cy1tb2RlbC1jb21tb24vZ2VuZXJhdGVkL2dvL21lc3NhZ2VwYXRoL3YxO21l",
            "c3NhZ2VwYXRoogIETVBUSGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Kik.Validation.ProtobufValidationReflection.Descriptor, global::Common.Messagepath.V1.CoreMessageCommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.LinkMessageAttachment), global::Common.Messagepath.V1.LinkMessageAttachment.Parser, new[]{ "Uris", "Title", "Text", "Picture", "Attribution", "ContentLayout", "AllowForward" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// LinkMessageAttachment defines the information required to render a link message sent by a bot.
  /// </summary>
  public sealed partial class LinkMessageAttachment : pb::IMessage<LinkMessageAttachment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LinkMessageAttachment> _parser = new pb::MessageParser<LinkMessageAttachment>(() => new LinkMessageAttachment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LinkMessageAttachment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.LinkMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LinkMessageAttachment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LinkMessageAttachment(LinkMessageAttachment other) : this() {
      uris_ = other.uris_.Clone();
      title_ = other.title_;
      text_ = other.text_;
      picture_ = other.picture_ != null ? other.picture_.Clone() : null;
      attribution_ = other.attribution_ != null ? other.attribution_.Clone() : null;
      contentLayout_ = other.contentLayout_ != null ? other.contentLayout_.Clone() : null;
      allowForward_ = other.allowForward_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LinkMessageAttachment Clone() {
      return new LinkMessageAttachment(this);
    }

    /// <summary>Field number for the "uris" field.</summary>
    public const int UrisFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Common.Messagepath.V1.UriElement> _repeated_uris_codec
        = pb::FieldCodec.ForMessage(10, global::Common.Messagepath.V1.UriElement.Parser);
    private readonly pbc::RepeatedField<global::Common.Messagepath.V1.UriElement> uris_ = new pbc::RepeatedField<global::Common.Messagepath.V1.UriElement>();
    /// <summary>
    /// Clients handle up to 10 URIs in a message. The URI of lowest priority is typically set as a
    /// fallback page for old versions of iOS and Android that do not support the Kik browser.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.Messagepath.V1.UriElement> Uris {
      get { return uris_; }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 50;
    private string title_ = "";
    /// <summary>
    /// The title of the link message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 51;
    private string text_ = "";
    /// <summary>
    /// The text of the link message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "picture" field.</summary>
    public const int PictureFieldNumber = 52;
    private global::Common.Messagepath.V1.PictureElement picture_;
    /// <summary>
    /// The picture to display in the link message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.PictureElement Picture {
      get { return picture_; }
      set {
        picture_ = value;
      }
    }

    /// <summary>Field number for the "attribution" field.</summary>
    public const int AttributionFieldNumber = 53;
    private global::Common.Messagepath.V1.AttributionAttachment attribution_;
    /// <summary>
    /// Describes the entity the link should be attributed to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.AttributionAttachment Attribution {
      get { return attribution_; }
      set {
        attribution_ = value;
      }
    }

    /// <summary>Field number for the "content_layout" field.</summary>
    public const int ContentLayoutFieldNumber = 54;
    private global::Common.Messagepath.V1.ContentLayoutElement contentLayout_;
    /// <summary>
    /// Dictates which content layout should be used for this message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.ContentLayoutElement ContentLayout {
      get { return contentLayout_; }
      set {
        contentLayout_ = value;
      }
    }

    /// <summary>Field number for the "allow_forward" field.</summary>
    public const int AllowForwardFieldNumber = 55;
    private bool allowForward_;
    /// <summary>
    /// Dictates if the link message can be forwarded to another conversation or not.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllowForward {
      get { return allowForward_; }
      set {
        allowForward_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LinkMessageAttachment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LinkMessageAttachment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!uris_.Equals(other.uris_)) return false;
      if (Title != other.Title) return false;
      if (Text != other.Text) return false;
      if (!object.Equals(Picture, other.Picture)) return false;
      if (!object.Equals(Attribution, other.Attribution)) return false;
      if (!object.Equals(ContentLayout, other.ContentLayout)) return false;
      if (AllowForward != other.AllowForward) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= uris_.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (picture_ != null) hash ^= Picture.GetHashCode();
      if (attribution_ != null) hash ^= Attribution.GetHashCode();
      if (contentLayout_ != null) hash ^= ContentLayout.GetHashCode();
      if (AllowForward != false) hash ^= AllowForward.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      uris_.WriteTo(output, _repeated_uris_codec);
      if (Title.Length != 0) {
        output.WriteRawTag(146, 3);
        output.WriteString(Title);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(Text);
      }
      if (picture_ != null) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(Picture);
      }
      if (attribution_ != null) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(Attribution);
      }
      if (contentLayout_ != null) {
        output.WriteRawTag(178, 3);
        output.WriteMessage(ContentLayout);
      }
      if (AllowForward != false) {
        output.WriteRawTag(184, 3);
        output.WriteBool(AllowForward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      uris_.WriteTo(ref output, _repeated_uris_codec);
      if (Title.Length != 0) {
        output.WriteRawTag(146, 3);
        output.WriteString(Title);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(154, 3);
        output.WriteString(Text);
      }
      if (picture_ != null) {
        output.WriteRawTag(162, 3);
        output.WriteMessage(Picture);
      }
      if (attribution_ != null) {
        output.WriteRawTag(170, 3);
        output.WriteMessage(Attribution);
      }
      if (contentLayout_ != null) {
        output.WriteRawTag(178, 3);
        output.WriteMessage(ContentLayout);
      }
      if (AllowForward != false) {
        output.WriteRawTag(184, 3);
        output.WriteBool(AllowForward);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += uris_.CalculateSize(_repeated_uris_codec);
      if (Title.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Text.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (picture_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Picture);
      }
      if (attribution_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Attribution);
      }
      if (contentLayout_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ContentLayout);
      }
      if (AllowForward != false) {
        size += 2 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LinkMessageAttachment other) {
      if (other == null) {
        return;
      }
      uris_.Add(other.uris_);
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.picture_ != null) {
        if (picture_ == null) {
          Picture = new global::Common.Messagepath.V1.PictureElement();
        }
        Picture.MergeFrom(other.Picture);
      }
      if (other.attribution_ != null) {
        if (attribution_ == null) {
          Attribution = new global::Common.Messagepath.V1.AttributionAttachment();
        }
        Attribution.MergeFrom(other.Attribution);
      }
      if (other.contentLayout_ != null) {
        if (contentLayout_ == null) {
          ContentLayout = new global::Common.Messagepath.V1.ContentLayoutElement();
        }
        ContentLayout.MergeFrom(other.ContentLayout);
      }
      if (other.AllowForward != false) {
        AllowForward = other.AllowForward;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            uris_.AddEntriesFrom(input, _repeated_uris_codec);
            break;
          }
          case 402: {
            Title = input.ReadString();
            break;
          }
          case 410: {
            Text = input.ReadString();
            break;
          }
          case 418: {
            if (picture_ == null) {
              Picture = new global::Common.Messagepath.V1.PictureElement();
            }
            input.ReadMessage(Picture);
            break;
          }
          case 426: {
            if (attribution_ == null) {
              Attribution = new global::Common.Messagepath.V1.AttributionAttachment();
            }
            input.ReadMessage(Attribution);
            break;
          }
          case 434: {
            if (contentLayout_ == null) {
              ContentLayout = new global::Common.Messagepath.V1.ContentLayoutElement();
            }
            input.ReadMessage(ContentLayout);
            break;
          }
          case 440: {
            AllowForward = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            uris_.AddEntriesFrom(ref input, _repeated_uris_codec);
            break;
          }
          case 402: {
            Title = input.ReadString();
            break;
          }
          case 410: {
            Text = input.ReadString();
            break;
          }
          case 418: {
            if (picture_ == null) {
              Picture = new global::Common.Messagepath.V1.PictureElement();
            }
            input.ReadMessage(Picture);
            break;
          }
          case 426: {
            if (attribution_ == null) {
              Attribution = new global::Common.Messagepath.V1.AttributionAttachment();
            }
            input.ReadMessage(Attribution);
            break;
          }
          case 434: {
            if (contentLayout_ == null) {
              ContentLayout = new global::Common.Messagepath.V1.ContentLayoutElement();
            }
            input.ReadMessage(ContentLayout);
            break;
          }
          case 440: {
            AllowForward = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
