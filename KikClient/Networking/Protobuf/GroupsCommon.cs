// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: groups/v1/groups_common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common.Groups.V1 {

  /// <summary>Holder for reflection information generated from groups/v1/groups_common.proto</summary>
  public static partial class GroupsCommonReflection {

    #region Descriptor
    /// <summary>File descriptor for groups/v1/groups_common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GroupsCommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch1ncm91cHMvdjEvZ3JvdXBzX2NvbW1vbi5wcm90bxIQY29tbW9uLmdyb3Vw",
            "cy52MRofZ29vZ2xlL3Byb3RvYnVmL3RpbWVzdGFtcC5wcm90bxoSY29tbW9u",
            "X21vZGVsLnByb3RvGhlwcm90b2J1Zl92YWxpZGF0aW9uLnByb3RvIpwDChBH",
            "cm91cFJvc3RlckVudHJ5EicKA2ppZBgBIAEoCzISLmNvbW1vbi5YaUdyb3Vw",
            "SmlkQgbKnSUCCAESOAoMZGlzcGxheV9kYXRhGAIgASgLMiIuY29tbW9uLmdy",
            "b3Vwcy52MS5Hcm91cERpc3BsYXlEYXRhEhEKCWlzX3B1YmxpYxgLIAEoCBIa",
            "ChBpc19ncm91cF9kZWxldGVkGAwgASgISAASGwoRaXNfbWVtYmVyX2RlbGV0",
            "ZWQYECABKAhIABIwCgxsYXN0X3VwZGF0ZWQYDSABKAsyGi5nb29nbGUucHJv",
            "dG9idWYuVGltZXN0YW1wEjwKB21lbWJlcnMYDiADKAsyHS5jb21tb24uZ3Jv",
            "dXBzLnYxLkdyb3VwTWVtYmVyQgzKnSUICAB4AIABlgESSAoOYmFubmVkX21l",
            "bWJlcnMYDyADKAsyIy5jb21tb24uZ3JvdXBzLnYxLkJhbm5lZEdyb3VwTWVt",
            "YmVyQgvKnSUHCAB4AIABbkIZChdncm91cF9vcl9tZW1iZXJfZGVsZXRlZEoE",
            "CAMQBCKiAgoQR3JvdXBEaXNwbGF5RGF0YRIxCgdoYXNodGFnGAIgASgJQiAY",
            "AcqdJRoIABIWXiNbQS1aYS16MC05Ll9dezIsMzJ9JBIfCgxkaXNwbGF5X25h",
            "bWUYAyABKAlCCRgByp0lAzD8BxI3Cgpncm91cF9jb2RlGAYgASgLMhsuY29t",
            "bW9uLmdyb3Vwcy52MS5Hcm91cENvZGVCBsqdJQIIABI3Cgpncm91cF9uYW1l",
            "GAcgASgLMhsuY29tbW9uLmdyb3Vwcy52MS5Hcm91cE5hbWVCBsqdJQIIABIl",
            "ChRkaXNwbGF5X3BpY19iYXNlX3VybBgEIAEoCUIHyp0lAzCAEBIhChlkaXNw",
            "bGF5X3BpY19sYXN0X21vZGlmaWVkGAUgASgEIogBCgtHcm91cE1lbWJlchIq",
            "CgNqaWQYASABKAsyFS5jb21tb24uWGlCYXJlVXNlckppZEIGyp0lAggBEhAK",
            "CGlzX2FkbWluGAMgASgIEhYKDmlzX3N1cGVyX2FkbWluGAQgASgIEhMKC2lz",
            "X2luYWN0aXZlGAUgASgIEg4KBmlzX2JvdBgGIAEoCCI/ChFCYW5uZWRHcm91",
            "cE1lbWJlchIqCgNqaWQYASABKAsyFS5jb21tb24uWGlCYXJlVXNlckppZEIG",
            "yp0lAggBIjUKCUdyb3VwQ29kZRIoCgdoYXNodGFnGAEgASgJQhfKnSUTCAES",
            "D14jW1x3XC5dezIsMzJ9JCIsCglHcm91cE5hbWUSHwoMZGlzcGxheV9uYW1l",
            "GAMgASgJQgnKnSUFCAEw/AciKwoPR3JvdXBJbnZpdGVDb2RlEhgKBGNvZGUY",
            "ASABKAlCCsqdJQYIASgBMDJCXgoOY29tLmtpay5ncm91cHNaTGdpdGh1Yi5j",
            "b20va2lraW50ZXJhY3RpdmUveGlwaGlhcy1tb2RlbC1jb21tb24vZ2VuZXJh",
            "dGVkL2dvL2dyb3Vwcy92MTtncm91cHNiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Common.CommonModelReflection.Descriptor, global::Kik.Validation.ProtobufValidationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Groups.V1.GroupRosterEntry), global::Common.Groups.V1.GroupRosterEntry.Parser, new[]{ "Jid", "DisplayData", "IsPublic", "IsGroupDeleted", "IsMemberDeleted", "LastUpdated", "Members", "BannedMembers" }, new[]{ "GroupOrMemberDeleted" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Groups.V1.GroupDisplayData), global::Common.Groups.V1.GroupDisplayData.Parser, new[]{ "Hashtag", "DisplayName", "GroupCode", "GroupName", "DisplayPicBaseUrl", "DisplayPicLastModified" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Groups.V1.GroupMember), global::Common.Groups.V1.GroupMember.Parser, new[]{ "Jid", "IsAdmin", "IsSuperAdmin", "IsInactive", "IsBot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Groups.V1.BannedGroupMember), global::Common.Groups.V1.BannedGroupMember.Parser, new[]{ "Jid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Groups.V1.GroupCode), global::Common.Groups.V1.GroupCode.Parser, new[]{ "Hashtag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Groups.V1.GroupName), global::Common.Groups.V1.GroupName.Parser, new[]{ "DisplayName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Groups.V1.GroupInviteCode), global::Common.Groups.V1.GroupInviteCode.Parser, new[]{ "Code" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///
  /// Top level group object.  This should be used for APIs that return complete
  /// group info, including display data and roster data.
  ///
  /// NOTE: This should be kept field compatible with LimitedGroupDetails from
  /// https://github.com/kikinteractive/xiphias-api-mobile/blob/master/proto/groups/v1/group_search_service.proto
  /// </summary>
  public sealed partial class GroupRosterEntry : pb::IMessage<GroupRosterEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupRosterEntry> _parser = new pb::MessageParser<GroupRosterEntry>(() => new GroupRosterEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupRosterEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Groups.V1.GroupsCommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupRosterEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupRosterEntry(GroupRosterEntry other) : this() {
      jid_ = other.jid_ != null ? other.jid_.Clone() : null;
      displayData_ = other.displayData_ != null ? other.displayData_.Clone() : null;
      isPublic_ = other.isPublic_;
      lastUpdated_ = other.lastUpdated_ != null ? other.lastUpdated_.Clone() : null;
      members_ = other.members_.Clone();
      bannedMembers_ = other.bannedMembers_.Clone();
      switch (other.GroupOrMemberDeletedCase) {
        case GroupOrMemberDeletedOneofCase.IsGroupDeleted:
          IsGroupDeleted = other.IsGroupDeleted;
          break;
        case GroupOrMemberDeletedOneofCase.IsMemberDeleted:
          IsMemberDeleted = other.IsMemberDeleted;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupRosterEntry Clone() {
      return new GroupRosterEntry(this);
    }

    /// <summary>Field number for the "jid" field.</summary>
    public const int JidFieldNumber = 1;
    private global::Common.XiGroupJid jid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiGroupJid Jid {
      get { return jid_; }
      set {
        jid_ = value;
      }
    }

    /// <summary>Field number for the "display_data" field.</summary>
    public const int DisplayDataFieldNumber = 2;
    private global::Common.Groups.V1.GroupDisplayData displayData_;
    /// <summary>
    /// Contains data required for mobile clients to display groups
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Groups.V1.GroupDisplayData DisplayData {
      get { return displayData_; }
      set {
        displayData_ = value;
      }
    }

    /// <summary>Field number for the "is_public" field.</summary>
    public const int IsPublicFieldNumber = 11;
    private bool isPublic_;
    /// <summary>
    /// Explicit indication of a public group
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPublic {
      get { return isPublic_; }
      set {
        isPublic_ = value;
      }
    }

    /// <summary>Field number for the "is_group_deleted" field.</summary>
    public const int IsGroupDeletedFieldNumber = 12;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsGroupDeleted {
      get { return groupOrMemberDeletedCase_ == GroupOrMemberDeletedOneofCase.IsGroupDeleted ? (bool) groupOrMemberDeleted_ : false; }
      set {
        groupOrMemberDeleted_ = value;
        groupOrMemberDeletedCase_ = GroupOrMemberDeletedOneofCase.IsGroupDeleted;
      }
    }

    /// <summary>Field number for the "is_member_deleted" field.</summary>
    public const int IsMemberDeletedFieldNumber = 16;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsMemberDeleted {
      get { return groupOrMemberDeletedCase_ == GroupOrMemberDeletedOneofCase.IsMemberDeleted ? (bool) groupOrMemberDeleted_ : false; }
      set {
        groupOrMemberDeleted_ = value;
        groupOrMemberDeletedCase_ = GroupOrMemberDeletedOneofCase.IsMemberDeleted;
      }
    }

    /// <summary>Field number for the "last_updated" field.</summary>
    public const int LastUpdatedFieldNumber = 13;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastUpdated_;
    /// <summary>
    /// Time of last update to group
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastUpdated {
      get { return lastUpdated_; }
      set {
        lastUpdated_ = value;
      }
    }

    /// <summary>Field number for the "members" field.</summary>
    public const int MembersFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Common.Groups.V1.GroupMember> _repeated_members_codec
        = pb::FieldCodec.ForMessage(114, global::Common.Groups.V1.GroupMember.Parser);
    private readonly pbc::RepeatedField<global::Common.Groups.V1.GroupMember> members_ = new pbc::RepeatedField<global::Common.Groups.V1.GroupMember>();
    /// <summary>
    /// Optional group member list, does not include banned users, does include admins
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.Groups.V1.GroupMember> Members {
      get { return members_; }
    }

    /// <summary>Field number for the "banned_members" field.</summary>
    public const int BannedMembersFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Common.Groups.V1.BannedGroupMember> _repeated_bannedMembers_codec
        = pb::FieldCodec.ForMessage(122, global::Common.Groups.V1.BannedGroupMember.Parser);
    private readonly pbc::RepeatedField<global::Common.Groups.V1.BannedGroupMember> bannedMembers_ = new pbc::RepeatedField<global::Common.Groups.V1.BannedGroupMember>();
    /// <summary>
    /// Optional banned member list
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.Groups.V1.BannedGroupMember> BannedMembers {
      get { return bannedMembers_; }
    }

    private object groupOrMemberDeleted_;
    /// <summary>Enum of possible cases for the "group_or_member_deleted" oneof.</summary>
    public enum GroupOrMemberDeletedOneofCase {
      None = 0,
      IsGroupDeleted = 12,
      IsMemberDeleted = 16,
    }
    private GroupOrMemberDeletedOneofCase groupOrMemberDeletedCase_ = GroupOrMemberDeletedOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupOrMemberDeletedOneofCase GroupOrMemberDeletedCase {
      get { return groupOrMemberDeletedCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearGroupOrMemberDeleted() {
      groupOrMemberDeletedCase_ = GroupOrMemberDeletedOneofCase.None;
      groupOrMemberDeleted_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupRosterEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupRosterEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Jid, other.Jid)) return false;
      if (!object.Equals(DisplayData, other.DisplayData)) return false;
      if (IsPublic != other.IsPublic) return false;
      if (IsGroupDeleted != other.IsGroupDeleted) return false;
      if (IsMemberDeleted != other.IsMemberDeleted) return false;
      if (!object.Equals(LastUpdated, other.LastUpdated)) return false;
      if(!members_.Equals(other.members_)) return false;
      if(!bannedMembers_.Equals(other.bannedMembers_)) return false;
      if (GroupOrMemberDeletedCase != other.GroupOrMemberDeletedCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (jid_ != null) hash ^= Jid.GetHashCode();
      if (displayData_ != null) hash ^= DisplayData.GetHashCode();
      if (IsPublic != false) hash ^= IsPublic.GetHashCode();
      if (groupOrMemberDeletedCase_ == GroupOrMemberDeletedOneofCase.IsGroupDeleted) hash ^= IsGroupDeleted.GetHashCode();
      if (groupOrMemberDeletedCase_ == GroupOrMemberDeletedOneofCase.IsMemberDeleted) hash ^= IsMemberDeleted.GetHashCode();
      if (lastUpdated_ != null) hash ^= LastUpdated.GetHashCode();
      hash ^= members_.GetHashCode();
      hash ^= bannedMembers_.GetHashCode();
      hash ^= (int) groupOrMemberDeletedCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (jid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jid);
      }
      if (displayData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DisplayData);
      }
      if (IsPublic != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsPublic);
      }
      if (groupOrMemberDeletedCase_ == GroupOrMemberDeletedOneofCase.IsGroupDeleted) {
        output.WriteRawTag(96);
        output.WriteBool(IsGroupDeleted);
      }
      if (lastUpdated_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(LastUpdated);
      }
      members_.WriteTo(output, _repeated_members_codec);
      bannedMembers_.WriteTo(output, _repeated_bannedMembers_codec);
      if (groupOrMemberDeletedCase_ == GroupOrMemberDeletedOneofCase.IsMemberDeleted) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsMemberDeleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (jid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jid);
      }
      if (displayData_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DisplayData);
      }
      if (IsPublic != false) {
        output.WriteRawTag(88);
        output.WriteBool(IsPublic);
      }
      if (groupOrMemberDeletedCase_ == GroupOrMemberDeletedOneofCase.IsGroupDeleted) {
        output.WriteRawTag(96);
        output.WriteBool(IsGroupDeleted);
      }
      if (lastUpdated_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(LastUpdated);
      }
      members_.WriteTo(ref output, _repeated_members_codec);
      bannedMembers_.WriteTo(ref output, _repeated_bannedMembers_codec);
      if (groupOrMemberDeletedCase_ == GroupOrMemberDeletedOneofCase.IsMemberDeleted) {
        output.WriteRawTag(128, 1);
        output.WriteBool(IsMemberDeleted);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (jid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Jid);
      }
      if (displayData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DisplayData);
      }
      if (IsPublic != false) {
        size += 1 + 1;
      }
      if (groupOrMemberDeletedCase_ == GroupOrMemberDeletedOneofCase.IsGroupDeleted) {
        size += 1 + 1;
      }
      if (groupOrMemberDeletedCase_ == GroupOrMemberDeletedOneofCase.IsMemberDeleted) {
        size += 2 + 1;
      }
      if (lastUpdated_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastUpdated);
      }
      size += members_.CalculateSize(_repeated_members_codec);
      size += bannedMembers_.CalculateSize(_repeated_bannedMembers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupRosterEntry other) {
      if (other == null) {
        return;
      }
      if (other.jid_ != null) {
        if (jid_ == null) {
          Jid = new global::Common.XiGroupJid();
        }
        Jid.MergeFrom(other.Jid);
      }
      if (other.displayData_ != null) {
        if (displayData_ == null) {
          DisplayData = new global::Common.Groups.V1.GroupDisplayData();
        }
        DisplayData.MergeFrom(other.DisplayData);
      }
      if (other.IsPublic != false) {
        IsPublic = other.IsPublic;
      }
      if (other.lastUpdated_ != null) {
        if (lastUpdated_ == null) {
          LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastUpdated.MergeFrom(other.LastUpdated);
      }
      members_.Add(other.members_);
      bannedMembers_.Add(other.bannedMembers_);
      switch (other.GroupOrMemberDeletedCase) {
        case GroupOrMemberDeletedOneofCase.IsGroupDeleted:
          IsGroupDeleted = other.IsGroupDeleted;
          break;
        case GroupOrMemberDeletedOneofCase.IsMemberDeleted:
          IsMemberDeleted = other.IsMemberDeleted;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (jid_ == null) {
              Jid = new global::Common.XiGroupJid();
            }
            input.ReadMessage(Jid);
            break;
          }
          case 18: {
            if (displayData_ == null) {
              DisplayData = new global::Common.Groups.V1.GroupDisplayData();
            }
            input.ReadMessage(DisplayData);
            break;
          }
          case 88: {
            IsPublic = input.ReadBool();
            break;
          }
          case 96: {
            IsGroupDeleted = input.ReadBool();
            break;
          }
          case 106: {
            if (lastUpdated_ == null) {
              LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastUpdated);
            break;
          }
          case 114: {
            members_.AddEntriesFrom(input, _repeated_members_codec);
            break;
          }
          case 122: {
            bannedMembers_.AddEntriesFrom(input, _repeated_bannedMembers_codec);
            break;
          }
          case 128: {
            IsMemberDeleted = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (jid_ == null) {
              Jid = new global::Common.XiGroupJid();
            }
            input.ReadMessage(Jid);
            break;
          }
          case 18: {
            if (displayData_ == null) {
              DisplayData = new global::Common.Groups.V1.GroupDisplayData();
            }
            input.ReadMessage(DisplayData);
            break;
          }
          case 88: {
            IsPublic = input.ReadBool();
            break;
          }
          case 96: {
            IsGroupDeleted = input.ReadBool();
            break;
          }
          case 106: {
            if (lastUpdated_ == null) {
              LastUpdated = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastUpdated);
            break;
          }
          case 114: {
            members_.AddEntriesFrom(ref input, _repeated_members_codec);
            break;
          }
          case 122: {
            bannedMembers_.AddEntriesFrom(ref input, _repeated_bannedMembers_codec);
            break;
          }
          case 128: {
            IsMemberDeleted = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Display-specific metadata for a group
  /// </summary>
  public sealed partial class GroupDisplayData : pb::IMessage<GroupDisplayData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupDisplayData> _parser = new pb::MessageParser<GroupDisplayData>(() => new GroupDisplayData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupDisplayData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Groups.V1.GroupsCommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupDisplayData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupDisplayData(GroupDisplayData other) : this() {
      hashtag_ = other.hashtag_;
      displayName_ = other.displayName_;
      groupCode_ = other.groupCode_ != null ? other.groupCode_.Clone() : null;
      groupName_ = other.groupName_ != null ? other.groupName_.Clone() : null;
      displayPicBaseUrl_ = other.displayPicBaseUrl_;
      displayPicLastModified_ = other.displayPicLastModified_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupDisplayData Clone() {
      return new GroupDisplayData(this);
    }

    /// <summary>Field number for the "hashtag" field.</summary>
    public const int HashtagFieldNumber = 2;
    private string hashtag_ = "";
    /// <summary>
    /// Optional Hashtag of the group (aka 'code' in server parlance)
    /// This field must contain '#' plus 2 to 32 more characters
    /// Note: this is deprecated, use group_code field
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hashtag {
      get { return hashtag_; }
      set {
        hashtag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 3;
    private string displayName_ = "";
    /// <summary>
    /// Optional display name of group.
    /// Note: this is deprecated, use group_name field
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "group_code" field.</summary>
    public const int GroupCodeFieldNumber = 6;
    private global::Common.Groups.V1.GroupCode groupCode_;
    /// <summary>
    /// Optional group code or 'hashtag'.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Groups.V1.GroupCode GroupCode {
      get { return groupCode_; }
      set {
        groupCode_ = value;
      }
    }

    /// <summary>Field number for the "group_name" field.</summary>
    public const int GroupNameFieldNumber = 7;
    private global::Common.Groups.V1.GroupName groupName_;
    /// <summary>
    /// Optional group display name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Groups.V1.GroupName GroupName {
      get { return groupName_; }
      set {
        groupName_ = value;
      }
    }

    /// <summary>Field number for the "display_pic_base_url" field.</summary>
    public const int DisplayPicBaseUrlFieldNumber = 4;
    private string displayPicBaseUrl_ = "";
    /// <summary>
    /// Optional BASE URL of group's display picture.  The base URL is
    /// an incomplete URL that requires {size} and {display_pic_last_modified}
    /// appended for use by the mobile client.  see NOTE below for format:
    ///
    /// NOTE: Construct an actual URL using something like
    ///       {display_pic_base_url}/{size}.jpg?ts={display_pic_last_modified}
    ///       where {size} is "orig" or "thumb", and the other variables are
    ///       taken from fields in this message
    /// See the following link for more details:
    /// https://github.com/kikinteractive/kik-product/wiki/Profile-Pictures#download-url-format
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayPicBaseUrl {
      get { return displayPicBaseUrl_; }
      set {
        displayPicBaseUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_pic_last_modified" field.</summary>
    public const int DisplayPicLastModifiedFieldNumber = 5;
    private ulong displayPicLastModified_;
    /// <summary>
    /// Optional timestamp of the group's display picture.
    /// NOTE: This is a special case - we explicitly are not using google.protobuf.Timestamp here.
    /// TODO: REVISIT THIS - do we want a more generic bytes or string to be attached to the
    ///       URL for cache busting?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong DisplayPicLastModified {
      get { return displayPicLastModified_; }
      set {
        displayPicLastModified_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupDisplayData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupDisplayData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hashtag != other.Hashtag) return false;
      if (DisplayName != other.DisplayName) return false;
      if (!object.Equals(GroupCode, other.GroupCode)) return false;
      if (!object.Equals(GroupName, other.GroupName)) return false;
      if (DisplayPicBaseUrl != other.DisplayPicBaseUrl) return false;
      if (DisplayPicLastModified != other.DisplayPicLastModified) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hashtag.Length != 0) hash ^= Hashtag.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (groupCode_ != null) hash ^= GroupCode.GetHashCode();
      if (groupName_ != null) hash ^= GroupName.GetHashCode();
      if (DisplayPicBaseUrl.Length != 0) hash ^= DisplayPicBaseUrl.GetHashCode();
      if (DisplayPicLastModified != 0UL) hash ^= DisplayPicLastModified.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hashtag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hashtag);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DisplayName);
      }
      if (DisplayPicBaseUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayPicBaseUrl);
      }
      if (DisplayPicLastModified != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(DisplayPicLastModified);
      }
      if (groupCode_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(GroupCode);
      }
      if (groupName_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(GroupName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hashtag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Hashtag);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DisplayName);
      }
      if (DisplayPicBaseUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayPicBaseUrl);
      }
      if (DisplayPicLastModified != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(DisplayPicLastModified);
      }
      if (groupCode_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(GroupCode);
      }
      if (groupName_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(GroupName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hashtag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hashtag);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (groupCode_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupCode);
      }
      if (groupName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupName);
      }
      if (DisplayPicBaseUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayPicBaseUrl);
      }
      if (DisplayPicLastModified != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(DisplayPicLastModified);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupDisplayData other) {
      if (other == null) {
        return;
      }
      if (other.Hashtag.Length != 0) {
        Hashtag = other.Hashtag;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.groupCode_ != null) {
        if (groupCode_ == null) {
          GroupCode = new global::Common.Groups.V1.GroupCode();
        }
        GroupCode.MergeFrom(other.GroupCode);
      }
      if (other.groupName_ != null) {
        if (groupName_ == null) {
          GroupName = new global::Common.Groups.V1.GroupName();
        }
        GroupName.MergeFrom(other.GroupName);
      }
      if (other.DisplayPicBaseUrl.Length != 0) {
        DisplayPicBaseUrl = other.DisplayPicBaseUrl;
      }
      if (other.DisplayPicLastModified != 0UL) {
        DisplayPicLastModified = other.DisplayPicLastModified;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            Hashtag = input.ReadString();
            break;
          }
          case 26: {
            DisplayName = input.ReadString();
            break;
          }
          case 34: {
            DisplayPicBaseUrl = input.ReadString();
            break;
          }
          case 40: {
            DisplayPicLastModified = input.ReadUInt64();
            break;
          }
          case 50: {
            if (groupCode_ == null) {
              GroupCode = new global::Common.Groups.V1.GroupCode();
            }
            input.ReadMessage(GroupCode);
            break;
          }
          case 58: {
            if (groupName_ == null) {
              GroupName = new global::Common.Groups.V1.GroupName();
            }
            input.ReadMessage(GroupName);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            Hashtag = input.ReadString();
            break;
          }
          case 26: {
            DisplayName = input.ReadString();
            break;
          }
          case 34: {
            DisplayPicBaseUrl = input.ReadString();
            break;
          }
          case 40: {
            DisplayPicLastModified = input.ReadUInt64();
            break;
          }
          case 50: {
            if (groupCode_ == null) {
              GroupCode = new global::Common.Groups.V1.GroupCode();
            }
            input.ReadMessage(GroupCode);
            break;
          }
          case 58: {
            if (groupName_ == null) {
              GroupName = new global::Common.Groups.V1.GroupName();
            }
            input.ReadMessage(GroupName);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Member (not banned member) of a group
  ///
  /// Keep this field compatible with the BannedGroupMember message
  /// </summary>
  public sealed partial class GroupMember : pb::IMessage<GroupMember>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupMember> _parser = new pb::MessageParser<GroupMember>(() => new GroupMember());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupMember> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Groups.V1.GroupsCommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMember() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMember(GroupMember other) : this() {
      jid_ = other.jid_ != null ? other.jid_.Clone() : null;
      isAdmin_ = other.isAdmin_;
      isSuperAdmin_ = other.isSuperAdmin_;
      isInactive_ = other.isInactive_;
      isBot_ = other.isBot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupMember Clone() {
      return new GroupMember(this);
    }

    /// <summary>Field number for the "jid" field.</summary>
    public const int JidFieldNumber = 1;
    private global::Common.XiBareUserJid jid_;
    /// <summary>
    /// ID of group member
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiBareUserJid Jid {
      get { return jid_; }
      set {
        jid_ = value;
      }
    }

    /// <summary>Field number for the "is_admin" field.</summary>
    public const int IsAdminFieldNumber = 3;
    private bool isAdmin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAdmin {
      get { return isAdmin_; }
      set {
        isAdmin_ = value;
      }
    }

    /// <summary>Field number for the "is_super_admin" field.</summary>
    public const int IsSuperAdminFieldNumber = 4;
    private bool isSuperAdmin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuperAdmin {
      get { return isSuperAdmin_; }
      set {
        isSuperAdmin_ = value;
      }
    }

    /// <summary>Field number for the "is_inactive" field.</summary>
    public const int IsInactiveFieldNumber = 5;
    private bool isInactive_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsInactive {
      get { return isInactive_; }
      set {
        isInactive_ = value;
      }
    }

    /// <summary>Field number for the "is_bot" field.</summary>
    public const int IsBotFieldNumber = 6;
    private bool isBot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBot {
      get { return isBot_; }
      set {
        isBot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupMember);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupMember other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Jid, other.Jid)) return false;
      if (IsAdmin != other.IsAdmin) return false;
      if (IsSuperAdmin != other.IsSuperAdmin) return false;
      if (IsInactive != other.IsInactive) return false;
      if (IsBot != other.IsBot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (jid_ != null) hash ^= Jid.GetHashCode();
      if (IsAdmin != false) hash ^= IsAdmin.GetHashCode();
      if (IsSuperAdmin != false) hash ^= IsSuperAdmin.GetHashCode();
      if (IsInactive != false) hash ^= IsInactive.GetHashCode();
      if (IsBot != false) hash ^= IsBot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (jid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jid);
      }
      if (IsAdmin != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsAdmin);
      }
      if (IsSuperAdmin != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsSuperAdmin);
      }
      if (IsInactive != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsInactive);
      }
      if (IsBot != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsBot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (jid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jid);
      }
      if (IsAdmin != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsAdmin);
      }
      if (IsSuperAdmin != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsSuperAdmin);
      }
      if (IsInactive != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsInactive);
      }
      if (IsBot != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsBot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (jid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Jid);
      }
      if (IsAdmin != false) {
        size += 1 + 1;
      }
      if (IsSuperAdmin != false) {
        size += 1 + 1;
      }
      if (IsInactive != false) {
        size += 1 + 1;
      }
      if (IsBot != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupMember other) {
      if (other == null) {
        return;
      }
      if (other.jid_ != null) {
        if (jid_ == null) {
          Jid = new global::Common.XiBareUserJid();
        }
        Jid.MergeFrom(other.Jid);
      }
      if (other.IsAdmin != false) {
        IsAdmin = other.IsAdmin;
      }
      if (other.IsSuperAdmin != false) {
        IsSuperAdmin = other.IsSuperAdmin;
      }
      if (other.IsInactive != false) {
        IsInactive = other.IsInactive;
      }
      if (other.IsBot != false) {
        IsBot = other.IsBot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (jid_ == null) {
              Jid = new global::Common.XiBareUserJid();
            }
            input.ReadMessage(Jid);
            break;
          }
          case 24: {
            IsAdmin = input.ReadBool();
            break;
          }
          case 32: {
            IsSuperAdmin = input.ReadBool();
            break;
          }
          case 40: {
            IsInactive = input.ReadBool();
            break;
          }
          case 48: {
            IsBot = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (jid_ == null) {
              Jid = new global::Common.XiBareUserJid();
            }
            input.ReadMessage(Jid);
            break;
          }
          case 24: {
            IsAdmin = input.ReadBool();
            break;
          }
          case 32: {
            IsSuperAdmin = input.ReadBool();
            break;
          }
          case 40: {
            IsInactive = input.ReadBool();
            break;
          }
          case 48: {
            IsBot = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Banned Member of a group
  ///
  /// Keep this field compatible with the GroupMember message
  /// </summary>
  public sealed partial class BannedGroupMember : pb::IMessage<BannedGroupMember>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BannedGroupMember> _parser = new pb::MessageParser<BannedGroupMember>(() => new BannedGroupMember());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BannedGroupMember> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Groups.V1.GroupsCommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BannedGroupMember() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BannedGroupMember(BannedGroupMember other) : this() {
      jid_ = other.jid_ != null ? other.jid_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BannedGroupMember Clone() {
      return new BannedGroupMember(this);
    }

    /// <summary>Field number for the "jid" field.</summary>
    public const int JidFieldNumber = 1;
    private global::Common.XiBareUserJid jid_;
    /// <summary>
    /// ID of group member
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiBareUserJid Jid {
      get { return jid_; }
      set {
        jid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BannedGroupMember);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BannedGroupMember other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Jid, other.Jid)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (jid_ != null) hash ^= Jid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (jid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (jid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (jid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Jid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BannedGroupMember other) {
      if (other == null) {
        return;
      }
      if (other.jid_ != null) {
        if (jid_ == null) {
          Jid = new global::Common.XiBareUserJid();
        }
        Jid.MergeFrom(other.Jid);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (jid_ == null) {
              Jid = new global::Common.XiBareUserJid();
            }
            input.ReadMessage(Jid);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (jid_ == null) {
              Jid = new global::Common.XiBareUserJid();
            }
            input.ReadMessage(Jid);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Code which identifies a group; used for group search.
  /// </summary>
  public sealed partial class GroupCode : pb::IMessage<GroupCode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupCode> _parser = new pb::MessageParser<GroupCode>(() => new GroupCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Groups.V1.GroupsCommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupCode(GroupCode other) : this() {
      hashtag_ = other.hashtag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupCode Clone() {
      return new GroupCode(this);
    }

    /// <summary>Field number for the "hashtag" field.</summary>
    public const int HashtagFieldNumber = 1;
    private string hashtag_ = "";
    /// <summary>
    /// The hastag must contain '#' plus 2 to 32 more characters.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Hashtag {
      get { return hashtag_; }
      set {
        hashtag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Hashtag != other.Hashtag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Hashtag.Length != 0) hash ^= Hashtag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Hashtag.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Hashtag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Hashtag.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Hashtag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Hashtag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Hashtag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupCode other) {
      if (other == null) {
        return;
      }
      if (other.Hashtag.Length != 0) {
        Hashtag = other.Hashtag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Hashtag = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Hashtag = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// Display name of group.
  /// </summary>
  public sealed partial class GroupName : pb::IMessage<GroupName>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupName> _parser = new pb::MessageParser<GroupName>(() => new GroupName());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupName> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Groups.V1.GroupsCommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupName() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupName(GroupName other) : this() {
      displayName_ = other.displayName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupName Clone() {
      return new GroupName(this);
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 3;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupName);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupName other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DisplayName != other.DisplayName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DisplayName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DisplayName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DisplayName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupName other) {
      if (other == null) {
        return;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 26: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 26: {
            DisplayName = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///
  /// A code used for associating a group invitation to a particular group member.
  /// </summary>
  public sealed partial class GroupInviteCode : pb::IMessage<GroupInviteCode>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupInviteCode> _parser = new pb::MessageParser<GroupInviteCode>(() => new GroupInviteCode());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GroupInviteCode> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Groups.V1.GroupsCommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupInviteCode() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupInviteCode(GroupInviteCode other) : this() {
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GroupInviteCode Clone() {
      return new GroupInviteCode(this);
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 1;
    private string code_ = "";
    /// <summary>
    /// This is a 160-bit random number encoded into a URL-safe base64 string.
    /// 160/6 ~ 27 base64 characters, allowing more to be safe.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GroupInviteCode);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GroupInviteCode other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GroupInviteCode other) {
      if (other == null) {
        return;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
