// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common_model.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common {

  /// <summary>Holder for reflection information generated from common_model.proto</summary>
  public static partial class CommonModelReflection {

    #region Descriptor
    /// <summary>File descriptor for common_model.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonModelReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJjb21tb25fbW9kZWwucHJvdG8SBmNvbW1vbhoZcHJvdG9idWZfdmFsaWRh",
            "dGlvbi5wcm90bxoRa2lrX29wdGlvbnMucHJvdG8iIgoGWGlVdWlkEgsKA21z",
            "YhgBIAEoEBILCgNsc2IYAiABKBAiTwoNWGlCYXJlVXNlckppZBI+Cgpsb2Nh",
            "bF9wYXJ0GAEgASgJQirKnSUmCAESIl5bYS16XzAtOVwuXXsyLDMwfShfW2Et",
            "ejAtOV17M30pPyQiHgoKWGlVc2VybmFtZRIQCgh1c2VybmFtZRgBIAEoCSIs",
            "CgVYaVVpZBIjCgN1aWQYASABKARCFsqdJRI5AQAAAAAAAABB//////8AAAAi",
            "1AEKClhpRGV2aWNlSWQSLwoGcHJlZml4GAEgASgOMh8uY29tbW9uLlhpRGV2",
            "aWNlSWQuRGV2aWNlUHJlZml4EiMKAmlkGAIgASgJQhfKnSUTCAESC15bYS1m",
            "MC05XSskKAgwQCJwCgxEZXZpY2VQcmVmaXgSCAoETk9ORRAAEgcKA0NJUBAB",
            "EgcKA0NBThACEgcKA0NUUxAREgcKA0NCVBASEhcKE1VOUkVDT0dOSVpFRF9E",
            "RVZJQ0UQChIHCgNDV1AQCxIHCgNDU1kQDRIHCgNDTUUQDyIsCgVYaUdpZBIj",
            "CgNnaWQYASABKARCFsqdJRI5AAAAAAABAABB//////8BAAAiNAoKWGlHcm91",
            "cEppZBImCgpsb2NhbF9wYXJ0GAEgASgJQhLKnSUOCAESCl5cZHsxM31fZyQi",
            "VgoKWGlVaWRPckdpZBIcCgN1aWQYASABKAsyDS5jb21tb24uWGlVaWRIABIc",
            "CgNnaWQYAiABKAsyDS5jb21tb24uWGlHaWRIAEIMCgp1aWRfb3JfZ2lkIn8K",
            "FFhpQmFyZVVzZXJPckdyb3VwSmlkEikKCHVzZXJfamlkGAEgASgLMhUuY29t",
            "bW9uLlhpQmFyZVVzZXJKaWRIABInCglncm91cF9qaWQYAiABKAsyEi5jb21t",
            "b24uWGlHcm91cEppZEgAQhMKEXVzZXJfb3JfZ3JvdXBfamlkIoABCg9YaUNs",
            "aWVudFZlcnNpb24SHAoFbWFqb3IYASABKA1CDcqdJQk5AQAAAAAAAAASDQoF",
            "bWlub3IYAiABKA0SDgoGYnVnZml4GAMgASgNEhUKBWJ1aWxkGAQgASgJQgbK",
            "nSUCMAoSGQoJZGV2X2J1aWxkGAUgASgJQgbKnSUCMAoiTQoIWGlMb2NhbGUS",
            "QQoGbG9jYWxlGAEgASgJQjHKnSUtEiteKD9pKVthLXpdezIsOH0oPzpfKFth",
            "LXpdezJ9fFswLTldezIsM30pKT8kQnIKD2NvbS5raWsueGltb2RlbEIQQ29t",
            "bW9uTW9kZWxQcm90b1ABWkJnaXRodWIuY29tL2tpa2ludGVyYWN0aXZlL3hp",
            "cGhpYXMtbW9kZWwtY29tbW9uL2dlbmVyYXRlZC9nbztjb21tb26gAQGqoyoC",
            "EAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Kik.Validation.ProtobufValidationReflection.Descriptor, global::Kik.KikOptionsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.XiUuid), global::Common.XiUuid.Parser, new[]{ "Msb", "Lsb" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.XiBareUserJid), global::Common.XiBareUserJid.Parser, new[]{ "LocalPart" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.XiUsername), global::Common.XiUsername.Parser, new[]{ "Username" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.XiUid), global::Common.XiUid.Parser, new[]{ "Uid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.XiDeviceId), global::Common.XiDeviceId.Parser, new[]{ "Prefix", "Id" }, null, new[]{ typeof(global::Common.XiDeviceId.Types.DevicePrefix) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.XiGid), global::Common.XiGid.Parser, new[]{ "Gid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.XiGroupJid), global::Common.XiGroupJid.Parser, new[]{ "LocalPart" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.XiUidOrGid), global::Common.XiUidOrGid.Parser, new[]{ "Uid", "Gid" }, new[]{ "UidOrGid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.XiBareUserOrGroupJid), global::Common.XiBareUserOrGroupJid.Parser, new[]{ "UserJid", "GroupJid" }, new[]{ "UserOrGroupJid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.XiClientVersion), global::Common.XiClientVersion.Parser, new[]{ "Major", "Minor", "Bugfix", "Build", "DevBuild" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.XiLocale), global::Common.XiLocale.Parser, new[]{ "Locale" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class XiUuid : pb::IMessage<XiUuid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<XiUuid> _parser = new pb::MessageParser<XiUuid>(() => new XiUuid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XiUuid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonModelReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiUuid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiUuid(XiUuid other) : this() {
      msb_ = other.msb_;
      lsb_ = other.lsb_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiUuid Clone() {
      return new XiUuid(this);
    }

    /// <summary>Field number for the "msb" field.</summary>
    public const int MsbFieldNumber = 1;
    private long msb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Msb {
      get { return msb_; }
      set {
        msb_ = value;
      }
    }

    /// <summary>Field number for the "lsb" field.</summary>
    public const int LsbFieldNumber = 2;
    private long lsb_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Lsb {
      get { return lsb_; }
      set {
        lsb_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XiUuid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XiUuid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Msb != other.Msb) return false;
      if (Lsb != other.Lsb) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Msb != 0L) hash ^= Msb.GetHashCode();
      if (Lsb != 0L) hash ^= Lsb.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Msb != 0L) {
        output.WriteRawTag(9);
        output.WriteSFixed64(Msb);
      }
      if (Lsb != 0L) {
        output.WriteRawTag(17);
        output.WriteSFixed64(Lsb);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Msb != 0L) {
        output.WriteRawTag(9);
        output.WriteSFixed64(Msb);
      }
      if (Lsb != 0L) {
        output.WriteRawTag(17);
        output.WriteSFixed64(Lsb);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Msb != 0L) {
        size += 1 + 8;
      }
      if (Lsb != 0L) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XiUuid other) {
      if (other == null) {
        return;
      }
      if (other.Msb != 0L) {
        Msb = other.Msb;
      }
      if (other.Lsb != 0L) {
        Lsb = other.Lsb;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Msb = input.ReadSFixed64();
            break;
          }
          case 17: {
            Lsb = input.ReadSFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Msb = input.ReadSFixed64();
            break;
          }
          case 17: {
            Lsb = input.ReadSFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A bare JID for a kik user.
  /// Domain component is omited and assumed to be talk.kik.com
  /// </summary>
  public sealed partial class XiBareUserJid : pb::IMessage<XiBareUserJid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<XiBareUserJid> _parser = new pb::MessageParser<XiBareUserJid>(() => new XiBareUserJid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XiBareUserJid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonModelReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiBareUserJid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiBareUserJid(XiBareUserJid other) : this() {
      localPart_ = other.localPart_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiBareUserJid Clone() {
      return new XiBareUserJid(this);
    }

    /// <summary>Field number for the "local_part" field.</summary>
    public const int LocalPartFieldNumber = 1;
    private string localPart_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocalPart {
      get { return localPart_; }
      set {
        localPart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XiBareUserJid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XiBareUserJid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LocalPart != other.LocalPart) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LocalPart.Length != 0) hash ^= LocalPart.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LocalPart.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LocalPart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LocalPart.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LocalPart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LocalPart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalPart);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XiBareUserJid other) {
      if (other == null) {
        return;
      }
      if (other.LocalPart.Length != 0) {
        LocalPart = other.LocalPart;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LocalPart = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LocalPart = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class XiUsername : pb::IMessage<XiUsername>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<XiUsername> _parser = new pb::MessageParser<XiUsername>(() => new XiUsername());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XiUsername> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonModelReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiUsername() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiUsername(XiUsername other) : this() {
      username_ = other.username_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiUsername Clone() {
      return new XiUsername(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XiUsername);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XiUsername other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XiUsername other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class XiUid : pb::IMessage<XiUid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<XiUid> _parser = new pb::MessageParser<XiUid>(() => new XiUid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XiUid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonModelReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiUid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiUid(XiUid other) : this() {
      uid_ = other.uid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiUid Clone() {
      return new XiUid(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private ulong uid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XiUid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XiUid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0UL) hash ^= Uid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Uid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Uid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Uid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Uid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XiUid other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0UL) {
        Uid = other.Uid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Uid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Uid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A Kik device ID. Device IDs should be generated on install and persist across the user resetting their account.
  /// </summary>
  public sealed partial class XiDeviceId : pb::IMessage<XiDeviceId>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<XiDeviceId> _parser = new pb::MessageParser<XiDeviceId>(() => new XiDeviceId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XiDeviceId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonModelReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiDeviceId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiDeviceId(XiDeviceId other) : this() {
      prefix_ = other.prefix_;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiDeviceId Clone() {
      return new XiDeviceId(this);
    }

    /// <summary>Field number for the "prefix" field.</summary>
    public const int PrefixFieldNumber = 1;
    private global::Common.XiDeviceId.Types.DevicePrefix prefix_ = global::Common.XiDeviceId.Types.DevicePrefix.None;
    /// <summary>
    /// Should NOT be NONE
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiDeviceId.Types.DevicePrefix Prefix {
      get { return prefix_; }
      set {
        prefix_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// The UNPREFIXED device id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XiDeviceId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XiDeviceId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Prefix != other.Prefix) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Prefix != global::Common.XiDeviceId.Types.DevicePrefix.None) hash ^= Prefix.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Prefix != global::Common.XiDeviceId.Types.DevicePrefix.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Prefix);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Prefix != global::Common.XiDeviceId.Types.DevicePrefix.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Prefix);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Prefix != global::Common.XiDeviceId.Types.DevicePrefix.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Prefix);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XiDeviceId other) {
      if (other == null) {
        return;
      }
      if (other.Prefix != global::Common.XiDeviceId.Types.DevicePrefix.None) {
        Prefix = other.Prefix;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Prefix = (global::Common.XiDeviceId.Types.DevicePrefix) input.ReadEnum();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Prefix = (global::Common.XiDeviceId.Types.DevicePrefix) input.ReadEnum();
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the XiDeviceId message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Note: Except for 0, numbering should be kept consistent with
      /// https://github.com/kikinteractive/kik-server/blob/master/common/src/main/java/com/kik/utils/KikDevice.java
      /// </summary>
      public enum DevicePrefix {
        [pbr::OriginalName("NONE")] None = 0,
        /// <summary>
        /// iPhone
        /// </summary>
        [pbr::OriginalName("CIP")] Cip = 1,
        /// <summary>
        /// Android
        /// </summary>
        [pbr::OriginalName("CAN")] Can = 2,
        /// <summary>
        /// Server teams test client
        /// </summary>
        [pbr::OriginalName("CTS")] Cts = 17,
        /// <summary>
        /// Bot
        /// </summary>
        [pbr::OriginalName("CBT")] Cbt = 18,
        [pbr::OriginalName("UNRECOGNIZED_DEVICE")] UnrecognizedDevice = 10,
        /// <summary>
        /// Winphone
        /// </summary>
        [pbr::OriginalName("CWP")] Cwp = 11,
        /// <summary>
        /// Symbian
        /// </summary>
        [pbr::OriginalName("CSY")] Csy = 13,
        /// <summary>
        /// J2ME
        /// </summary>
        [pbr::OriginalName("CME")] Cme = 15,
      }

    }
    #endregion

  }

  public sealed partial class XiGid : pb::IMessage<XiGid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<XiGid> _parser = new pb::MessageParser<XiGid>(() => new XiGid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XiGid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonModelReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiGid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiGid(XiGid other) : this() {
      gid_ = other.gid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiGid Clone() {
      return new XiGid(this);
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 1;
    private ulong gid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Gid {
      get { return gid_; }
      set {
        gid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XiGid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XiGid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gid != other.Gid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gid != 0UL) hash ^= Gid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Gid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Gid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Gid != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(Gid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gid != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Gid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XiGid other) {
      if (other == null) {
        return;
      }
      if (other.Gid != 0UL) {
        Gid = other.Gid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Gid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Gid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Domain component is omitted and assumed to be groups.kik.com
  /// </summary>
  public sealed partial class XiGroupJid : pb::IMessage<XiGroupJid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<XiGroupJid> _parser = new pb::MessageParser<XiGroupJid>(() => new XiGroupJid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XiGroupJid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonModelReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiGroupJid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiGroupJid(XiGroupJid other) : this() {
      localPart_ = other.localPart_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiGroupJid Clone() {
      return new XiGroupJid(this);
    }

    /// <summary>Field number for the "local_part" field.</summary>
    public const int LocalPartFieldNumber = 1;
    private string localPart_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LocalPart {
      get { return localPart_; }
      set {
        localPart_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XiGroupJid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XiGroupJid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LocalPart != other.LocalPart) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LocalPart.Length != 0) hash ^= LocalPart.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LocalPart.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LocalPart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LocalPart.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LocalPart);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LocalPart.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LocalPart);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XiGroupJid other) {
      if (other == null) {
        return;
      }
      if (other.LocalPart.Length != 0) {
        LocalPart = other.LocalPart;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LocalPart = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LocalPart = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class XiUidOrGid : pb::IMessage<XiUidOrGid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<XiUidOrGid> _parser = new pb::MessageParser<XiUidOrGid>(() => new XiUidOrGid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XiUidOrGid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonModelReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiUidOrGid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiUidOrGid(XiUidOrGid other) : this() {
      switch (other.UidOrGidCase) {
        case UidOrGidOneofCase.Uid:
          Uid = other.Uid.Clone();
          break;
        case UidOrGidOneofCase.Gid:
          Gid = other.Gid.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiUidOrGid Clone() {
      return new XiUidOrGid(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiUid Uid {
      get { return uidOrGidCase_ == UidOrGidOneofCase.Uid ? (global::Common.XiUid) uidOrGid_ : null; }
      set {
        uidOrGid_ = value;
        uidOrGidCase_ = value == null ? UidOrGidOneofCase.None : UidOrGidOneofCase.Uid;
      }
    }

    /// <summary>Field number for the "gid" field.</summary>
    public const int GidFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiGid Gid {
      get { return uidOrGidCase_ == UidOrGidOneofCase.Gid ? (global::Common.XiGid) uidOrGid_ : null; }
      set {
        uidOrGid_ = value;
        uidOrGidCase_ = value == null ? UidOrGidOneofCase.None : UidOrGidOneofCase.Gid;
      }
    }

    private object uidOrGid_;
    /// <summary>Enum of possible cases for the "uid_or_gid" oneof.</summary>
    public enum UidOrGidOneofCase {
      None = 0,
      Uid = 1,
      Gid = 2,
    }
    private UidOrGidOneofCase uidOrGidCase_ = UidOrGidOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UidOrGidOneofCase UidOrGidCase {
      get { return uidOrGidCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUidOrGid() {
      uidOrGidCase_ = UidOrGidOneofCase.None;
      uidOrGid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XiUidOrGid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XiUidOrGid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Uid, other.Uid)) return false;
      if (!object.Equals(Gid, other.Gid)) return false;
      if (UidOrGidCase != other.UidOrGidCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (uidOrGidCase_ == UidOrGidOneofCase.Uid) hash ^= Uid.GetHashCode();
      if (uidOrGidCase_ == UidOrGidOneofCase.Gid) hash ^= Gid.GetHashCode();
      hash ^= (int) uidOrGidCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (uidOrGidCase_ == UidOrGidOneofCase.Uid) {
        output.WriteRawTag(10);
        output.WriteMessage(Uid);
      }
      if (uidOrGidCase_ == UidOrGidOneofCase.Gid) {
        output.WriteRawTag(18);
        output.WriteMessage(Gid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (uidOrGidCase_ == UidOrGidOneofCase.Uid) {
        output.WriteRawTag(10);
        output.WriteMessage(Uid);
      }
      if (uidOrGidCase_ == UidOrGidOneofCase.Gid) {
        output.WriteRawTag(18);
        output.WriteMessage(Gid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (uidOrGidCase_ == UidOrGidOneofCase.Uid) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uid);
      }
      if (uidOrGidCase_ == UidOrGidOneofCase.Gid) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XiUidOrGid other) {
      if (other == null) {
        return;
      }
      switch (other.UidOrGidCase) {
        case UidOrGidOneofCase.Uid:
          if (Uid == null) {
            Uid = new global::Common.XiUid();
          }
          Uid.MergeFrom(other.Uid);
          break;
        case UidOrGidOneofCase.Gid:
          if (Gid == null) {
            Gid = new global::Common.XiGid();
          }
          Gid.MergeFrom(other.Gid);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Common.XiUid subBuilder = new global::Common.XiUid();
            if (uidOrGidCase_ == UidOrGidOneofCase.Uid) {
              subBuilder.MergeFrom(Uid);
            }
            input.ReadMessage(subBuilder);
            Uid = subBuilder;
            break;
          }
          case 18: {
            global::Common.XiGid subBuilder = new global::Common.XiGid();
            if (uidOrGidCase_ == UidOrGidOneofCase.Gid) {
              subBuilder.MergeFrom(Gid);
            }
            input.ReadMessage(subBuilder);
            Gid = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Common.XiUid subBuilder = new global::Common.XiUid();
            if (uidOrGidCase_ == UidOrGidOneofCase.Uid) {
              subBuilder.MergeFrom(Uid);
            }
            input.ReadMessage(subBuilder);
            Uid = subBuilder;
            break;
          }
          case 18: {
            global::Common.XiGid subBuilder = new global::Common.XiGid();
            if (uidOrGidCase_ == UidOrGidOneofCase.Gid) {
              subBuilder.MergeFrom(Gid);
            }
            input.ReadMessage(subBuilder);
            Gid = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class XiBareUserOrGroupJid : pb::IMessage<XiBareUserOrGroupJid>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<XiBareUserOrGroupJid> _parser = new pb::MessageParser<XiBareUserOrGroupJid>(() => new XiBareUserOrGroupJid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XiBareUserOrGroupJid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonModelReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiBareUserOrGroupJid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiBareUserOrGroupJid(XiBareUserOrGroupJid other) : this() {
      switch (other.UserOrGroupJidCase) {
        case UserOrGroupJidOneofCase.UserJid:
          UserJid = other.UserJid.Clone();
          break;
        case UserOrGroupJidOneofCase.GroupJid:
          GroupJid = other.GroupJid.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiBareUserOrGroupJid Clone() {
      return new XiBareUserOrGroupJid(this);
    }

    /// <summary>Field number for the "user_jid" field.</summary>
    public const int UserJidFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiBareUserJid UserJid {
      get { return userOrGroupJidCase_ == UserOrGroupJidOneofCase.UserJid ? (global::Common.XiBareUserJid) userOrGroupJid_ : null; }
      set {
        userOrGroupJid_ = value;
        userOrGroupJidCase_ = value == null ? UserOrGroupJidOneofCase.None : UserOrGroupJidOneofCase.UserJid;
      }
    }

    /// <summary>Field number for the "group_jid" field.</summary>
    public const int GroupJidFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiGroupJid GroupJid {
      get { return userOrGroupJidCase_ == UserOrGroupJidOneofCase.GroupJid ? (global::Common.XiGroupJid) userOrGroupJid_ : null; }
      set {
        userOrGroupJid_ = value;
        userOrGroupJidCase_ = value == null ? UserOrGroupJidOneofCase.None : UserOrGroupJidOneofCase.GroupJid;
      }
    }

    private object userOrGroupJid_;
    /// <summary>Enum of possible cases for the "user_or_group_jid" oneof.</summary>
    public enum UserOrGroupJidOneofCase {
      None = 0,
      UserJid = 1,
      GroupJid = 2,
    }
    private UserOrGroupJidOneofCase userOrGroupJidCase_ = UserOrGroupJidOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserOrGroupJidOneofCase UserOrGroupJidCase {
      get { return userOrGroupJidCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearUserOrGroupJid() {
      userOrGroupJidCase_ = UserOrGroupJidOneofCase.None;
      userOrGroupJid_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XiBareUserOrGroupJid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XiBareUserOrGroupJid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserJid, other.UserJid)) return false;
      if (!object.Equals(GroupJid, other.GroupJid)) return false;
      if (UserOrGroupJidCase != other.UserOrGroupJidCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userOrGroupJidCase_ == UserOrGroupJidOneofCase.UserJid) hash ^= UserJid.GetHashCode();
      if (userOrGroupJidCase_ == UserOrGroupJidOneofCase.GroupJid) hash ^= GroupJid.GetHashCode();
      hash ^= (int) userOrGroupJidCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (userOrGroupJidCase_ == UserOrGroupJidOneofCase.UserJid) {
        output.WriteRawTag(10);
        output.WriteMessage(UserJid);
      }
      if (userOrGroupJidCase_ == UserOrGroupJidOneofCase.GroupJid) {
        output.WriteRawTag(18);
        output.WriteMessage(GroupJid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (userOrGroupJidCase_ == UserOrGroupJidOneofCase.UserJid) {
        output.WriteRawTag(10);
        output.WriteMessage(UserJid);
      }
      if (userOrGroupJidCase_ == UserOrGroupJidOneofCase.GroupJid) {
        output.WriteRawTag(18);
        output.WriteMessage(GroupJid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userOrGroupJidCase_ == UserOrGroupJidOneofCase.UserJid) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserJid);
      }
      if (userOrGroupJidCase_ == UserOrGroupJidOneofCase.GroupJid) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroupJid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XiBareUserOrGroupJid other) {
      if (other == null) {
        return;
      }
      switch (other.UserOrGroupJidCase) {
        case UserOrGroupJidOneofCase.UserJid:
          if (UserJid == null) {
            UserJid = new global::Common.XiBareUserJid();
          }
          UserJid.MergeFrom(other.UserJid);
          break;
        case UserOrGroupJidOneofCase.GroupJid:
          if (GroupJid == null) {
            GroupJid = new global::Common.XiGroupJid();
          }
          GroupJid.MergeFrom(other.GroupJid);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Common.XiBareUserJid subBuilder = new global::Common.XiBareUserJid();
            if (userOrGroupJidCase_ == UserOrGroupJidOneofCase.UserJid) {
              subBuilder.MergeFrom(UserJid);
            }
            input.ReadMessage(subBuilder);
            UserJid = subBuilder;
            break;
          }
          case 18: {
            global::Common.XiGroupJid subBuilder = new global::Common.XiGroupJid();
            if (userOrGroupJidCase_ == UserOrGroupJidOneofCase.GroupJid) {
              subBuilder.MergeFrom(GroupJid);
            }
            input.ReadMessage(subBuilder);
            GroupJid = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Common.XiBareUserJid subBuilder = new global::Common.XiBareUserJid();
            if (userOrGroupJidCase_ == UserOrGroupJidOneofCase.UserJid) {
              subBuilder.MergeFrom(UserJid);
            }
            input.ReadMessage(subBuilder);
            UserJid = subBuilder;
            break;
          }
          case 18: {
            global::Common.XiGroupJid subBuilder = new global::Common.XiGroupJid();
            if (userOrGroupJidCase_ == UserOrGroupJidOneofCase.GroupJid) {
              subBuilder.MergeFrom(GroupJid);
            }
            input.ReadMessage(subBuilder);
            GroupJid = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The kik client version composed of major, minor, bugfix, build, and/or dev_build version numbers.
  /// The string representation of release builds is {major}.{minor}.{bugfix}.{build}
  /// The string representation of internal (dev) builds is {major}.{minor}.{bugfix}-{dev_build}
  /// In rare cases, we can see an internal build with the format {major}.{minor}.{bugfix}.{build}-{dev_build}
  /// It is expected that  major and minor versions will be double digit.
  /// </summary>
  public sealed partial class XiClientVersion : pb::IMessage<XiClientVersion>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<XiClientVersion> _parser = new pb::MessageParser<XiClientVersion>(() => new XiClientVersion());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XiClientVersion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonModelReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiClientVersion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiClientVersion(XiClientVersion other) : this() {
      major_ = other.major_;
      minor_ = other.minor_;
      bugfix_ = other.bugfix_;
      build_ = other.build_;
      devBuild_ = other.devBuild_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiClientVersion Clone() {
      return new XiClientVersion(this);
    }

    /// <summary>Field number for the "major" field.</summary>
    public const int MajorFieldNumber = 1;
    private uint major_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Major {
      get { return major_; }
      set {
        major_ = value;
      }
    }

    /// <summary>Field number for the "minor" field.</summary>
    public const int MinorFieldNumber = 2;
    private uint minor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Minor {
      get { return minor_; }
      set {
        minor_ = value;
      }
    }

    /// <summary>Field number for the "bugfix" field.</summary>
    public const int BugfixFieldNumber = 3;
    private uint bugfix_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Bugfix {
      get { return bugfix_; }
      set {
        bugfix_ = value;
      }
    }

    /// <summary>Field number for the "build" field.</summary>
    public const int BuildFieldNumber = 4;
    private string build_ = "";
    /// <summary>
    /// The maximum of 10 comes from the current limitation in the device database where
    /// the full string representation of the clients version must be less than 16 characters.
    /// and the shortest major.minor.bugfix. string is 6.  (16 - 6 = 10)
    /// This is optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Build {
      get { return build_; }
      set {
        build_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dev_build" field.</summary>
    public const int DevBuildFieldNumber = 5;
    private string devBuild_ = "";
    /// <summary>
    /// The dev build occurs after the first optional dash ("-") character, and is represented as
    /// everything after, including any subsequent dashes.  
    /// The maximum of 10 comes from the current limitation in the device database where
    /// the full string representation of the clients version must be less than 16 characters.
    /// and the shortest major.minor.bugfix- string is 6.  (16 - 6 = 10)
    /// This is optional
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DevBuild {
      get { return devBuild_; }
      set {
        devBuild_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XiClientVersion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XiClientVersion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Major != other.Major) return false;
      if (Minor != other.Minor) return false;
      if (Bugfix != other.Bugfix) return false;
      if (Build != other.Build) return false;
      if (DevBuild != other.DevBuild) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Major != 0) hash ^= Major.GetHashCode();
      if (Minor != 0) hash ^= Minor.GetHashCode();
      if (Bugfix != 0) hash ^= Bugfix.GetHashCode();
      if (Build.Length != 0) hash ^= Build.GetHashCode();
      if (DevBuild.Length != 0) hash ^= DevBuild.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Major != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Major);
      }
      if (Minor != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Minor);
      }
      if (Bugfix != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Bugfix);
      }
      if (Build.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Build);
      }
      if (DevBuild.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DevBuild);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Major != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Major);
      }
      if (Minor != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Minor);
      }
      if (Bugfix != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Bugfix);
      }
      if (Build.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Build);
      }
      if (DevBuild.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DevBuild);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Major != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Major);
      }
      if (Minor != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Minor);
      }
      if (Bugfix != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Bugfix);
      }
      if (Build.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Build);
      }
      if (DevBuild.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DevBuild);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XiClientVersion other) {
      if (other == null) {
        return;
      }
      if (other.Major != 0) {
        Major = other.Major;
      }
      if (other.Minor != 0) {
        Minor = other.Minor;
      }
      if (other.Bugfix != 0) {
        Bugfix = other.Bugfix;
      }
      if (other.Build.Length != 0) {
        Build = other.Build;
      }
      if (other.DevBuild.Length != 0) {
        DevBuild = other.DevBuild;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Major = input.ReadUInt32();
            break;
          }
          case 16: {
            Minor = input.ReadUInt32();
            break;
          }
          case 24: {
            Bugfix = input.ReadUInt32();
            break;
          }
          case 34: {
            Build = input.ReadString();
            break;
          }
          case 42: {
            DevBuild = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Major = input.ReadUInt32();
            break;
          }
          case 16: {
            Minor = input.ReadUInt32();
            break;
          }
          case 24: {
            Bugfix = input.ReadUInt32();
            break;
          }
          case 34: {
            Build = input.ReadString();
            break;
          }
          case 42: {
            DevBuild = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class XiLocale : pb::IMessage<XiLocale>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<XiLocale> _parser = new pb::MessageParser<XiLocale>(() => new XiLocale());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<XiLocale> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonModelReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiLocale() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiLocale(XiLocale other) : this() {
      locale_ = other.locale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public XiLocale Clone() {
      return new XiLocale(this);
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 1;
    private string locale_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Locale {
      get { return locale_; }
      set {
        locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as XiLocale);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(XiLocale other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Locale != other.Locale) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Locale.Length != 0) hash ^= Locale.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Locale.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Locale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Locale.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Locale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Locale.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(XiLocale other) {
      if (other == null) {
        return;
      }
      if (other.Locale.Length != 0) {
        Locale = other.Locale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Locale = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Locale = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
