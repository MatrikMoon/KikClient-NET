// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: messagepath/v1/widgets.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common.Messagepath.V1 {

  /// <summary>Holder for reflection information generated from messagepath/v1/widgets.proto</summary>
  public static partial class WidgetsReflection {

    #region Descriptor
    /// <summary>File descriptor for messagepath/v1/widgets.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WidgetsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChxtZXNzYWdlcGF0aC92MS93aWRnZXRzLnByb3RvEhVjb21tb24ubWVzc2Fn",
            "ZXBhdGgudjEaEmNvbW1vbl9tb2RlbC5wcm90bxoZcHJvdG9idWZfdmFsaWRh",
            "dGlvbi5wcm90bxoebWVzc2FnZXBhdGgvdjEva2V5Ym9hcmRzLnByb3RvIlAK",
            "EFdpZGdldEF0dGFjaG1lbnQSPAoHd2lkZ2V0cxgBIAMoCzIdLmNvbW1vbi5t",
            "ZXNzYWdlcGF0aC52MS5XaWRnZXRCDMqdJQgIAXgBgAHoByJ1CgZXaWRnZXQS",
            "KQoCdG8YASABKAsyFS5jb21tb24uWGlCYXJlVXNlckppZEIGyp0lAggAEjgK",
            "C3RleHRfd2lkZ2V0GCAgASgLMiEuY29tbW9uLm1lc3NhZ2VwYXRoLnYxLlRl",
            "eHRXaWRnZXRIAEIGCgR0eXBlInwKClRleHRXaWRnZXQSGQoEYm9keRgBIAEo",
            "CUILyp0lBwgBKAEw6AcSGAoFdGl0bGUYAiABKAlCCcqdJQUIADDoBxI5Cghr",
            "ZXlib2FyZBgDIAEoCzIfLmNvbW1vbi5tZXNzYWdlcGF0aC52MS5LZXlib2Fy",
            "ZEIGyp0lAggAQncKGWNvbS5raWsubWVzc2FnZXBhdGgubW9kZWxaU2dpdGh1",
            "Yi5jb20va2lraW50ZXJhY3RpdmUveGlwaGlhcy1tb2RlbC1jb21tb24vZ2Vu",
            "ZXJhdGVkL2dvL21lc3NhZ2VwYXRoO21lc3NhZ2VwYXRoogIETVBUSGIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Common.CommonModelReflection.Descriptor, global::Kik.Validation.ProtobufValidationReflection.Descriptor, global::Common.Messagepath.V1.KeyboardsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.WidgetAttachment), global::Common.Messagepath.V1.WidgetAttachment.Parser, new[]{ "Widgets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.Widget), global::Common.Messagepath.V1.Widget.Parser, new[]{ "To", "TextWidget" }, new[]{ "Type" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Messagepath.V1.TextWidget), global::Common.Messagepath.V1.TextWidget.Parser, new[]{ "Body", "Title", "Keyboard" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// WidgetAttachment defines the mechanism that allow bots to alter the behavior of dynamic
  /// content that supplements the chatbot experience.
  ///
  /// Specifying a Widget allows a bot to give the user additional information that provides
  /// more context to a conversation. TextWidget is an example of a widget that stays at the
  /// top of the screen, providing persistent information all users in a conversation.
  ///
  /// Up to 51 of these may be present in a single message to be delivered. The case where this can
  /// occur is in the case of a bot responding to a mention in a group containing 50 individuals, and
  /// also having a default.
  ///
  /// If a client receives multiple widgets in this list directed at a single user, the first one
  /// should be taken as the one to display. Support for displaying multiple widgets may be added in
  /// the future.
  ///
  /// See: https://docs.google.com/a/kik.com/document/d/1Y2tnA5KfCma0wmGoqnoqFKWTJZa-beU0mvU3v8A3UN0/edit
  /// </summary>
  public sealed partial class WidgetAttachment : pb::IMessage<WidgetAttachment>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WidgetAttachment> _parser = new pb::MessageParser<WidgetAttachment>(() => new WidgetAttachment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WidgetAttachment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.WidgetsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WidgetAttachment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WidgetAttachment(WidgetAttachment other) : this() {
      widgets_ = other.widgets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WidgetAttachment Clone() {
      return new WidgetAttachment(this);
    }

    /// <summary>Field number for the "widgets" field.</summary>
    public const int WidgetsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Common.Messagepath.V1.Widget> _repeated_widgets_codec
        = pb::FieldCodec.ForMessage(10, global::Common.Messagepath.V1.Widget.Parser);
    private readonly pbc::RepeatedField<global::Common.Messagepath.V1.Widget> widgets_ = new pbc::RepeatedField<global::Common.Messagepath.V1.Widget>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.Messagepath.V1.Widget> Widgets {
      get { return widgets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WidgetAttachment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WidgetAttachment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!widgets_.Equals(other.widgets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= widgets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      widgets_.WriteTo(output, _repeated_widgets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      widgets_.WriteTo(ref output, _repeated_widgets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += widgets_.CalculateSize(_repeated_widgets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WidgetAttachment other) {
      if (other == null) {
        return;
      }
      widgets_.Add(other.widgets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            widgets_.AddEntriesFrom(input, _repeated_widgets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            widgets_.AddEntriesFrom(ref input, _repeated_widgets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Widget : pb::IMessage<Widget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Widget> _parser = new pb::MessageParser<Widget>(() => new Widget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Widget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.WidgetsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Widget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Widget(Widget other) : this() {
      to_ = other.to_ != null ? other.to_.Clone() : null;
      switch (other.TypeCase) {
        case TypeOneofCase.TextWidget:
          TextWidget = other.TextWidget.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Widget Clone() {
      return new Widget(this);
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 1;
    private global::Common.XiBareUserJid to_;
    /// <summary>
    /// The user that will receive this particular Widget instance.
    ///
    /// In the event that this field is omitted, this widget should be sent to all users that will
    /// receive the message containing this widget.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.XiBareUserJid To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "text_widget" field.</summary>
    public const int TextWidgetFieldNumber = 32;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.TextWidget TextWidget {
      get { return typeCase_ == TypeOneofCase.TextWidget ? (global::Common.Messagepath.V1.TextWidget) type_ : null; }
      set {
        type_ = value;
        typeCase_ = value == null ? TypeOneofCase.None : TypeOneofCase.TextWidget;
      }
    }

    private object type_;
    /// <summary>Enum of possible cases for the "type" oneof.</summary>
    public enum TypeOneofCase {
      None = 0,
      TextWidget = 32,
    }
    private TypeOneofCase typeCase_ = TypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofCase TypeCase {
      get { return typeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearType() {
      typeCase_ = TypeOneofCase.None;
      type_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Widget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Widget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(To, other.To)) return false;
      if (!object.Equals(TextWidget, other.TextWidget)) return false;
      if (TypeCase != other.TypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (to_ != null) hash ^= To.GetHashCode();
      if (typeCase_ == TypeOneofCase.TextWidget) hash ^= TextWidget.GetHashCode();
      hash ^= (int) typeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (to_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(To);
      }
      if (typeCase_ == TypeOneofCase.TextWidget) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(TextWidget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (to_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(To);
      }
      if (typeCase_ == TypeOneofCase.TextWidget) {
        output.WriteRawTag(130, 2);
        output.WriteMessage(TextWidget);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (typeCase_ == TypeOneofCase.TextWidget) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(TextWidget);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Widget other) {
      if (other == null) {
        return;
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::Common.XiBareUserJid();
        }
        To.MergeFrom(other.To);
      }
      switch (other.TypeCase) {
        case TypeOneofCase.TextWidget:
          if (TextWidget == null) {
            TextWidget = new global::Common.Messagepath.V1.TextWidget();
          }
          TextWidget.MergeFrom(other.TextWidget);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (to_ == null) {
              To = new global::Common.XiBareUserJid();
            }
            input.ReadMessage(To);
            break;
          }
          case 258: {
            global::Common.Messagepath.V1.TextWidget subBuilder = new global::Common.Messagepath.V1.TextWidget();
            if (typeCase_ == TypeOneofCase.TextWidget) {
              subBuilder.MergeFrom(TextWidget);
            }
            input.ReadMessage(subBuilder);
            TextWidget = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (to_ == null) {
              To = new global::Common.XiBareUserJid();
            }
            input.ReadMessage(To);
            break;
          }
          case 258: {
            global::Common.Messagepath.V1.TextWidget subBuilder = new global::Common.Messagepath.V1.TextWidget();
            if (typeCase_ == TypeOneofCase.TextWidget) {
              subBuilder.MergeFrom(TextWidget);
            }
            input.ReadMessage(subBuilder);
            TextWidget = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TextWidget allow bots to provide text to be shown at the top of the
  /// conversation window.
  /// </summary>
  public sealed partial class TextWidget : pb::IMessage<TextWidget>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TextWidget> _parser = new pb::MessageParser<TextWidget>(() => new TextWidget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TextWidget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.Messagepath.V1.WidgetsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextWidget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextWidget(TextWidget other) : this() {
      body_ = other.body_;
      title_ = other.title_;
      keyboard_ = other.keyboard_ != null ? other.keyboard_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TextWidget Clone() {
      return new TextWidget(this);
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 1;
    private string body_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "keyboard" field.</summary>
    public const int KeyboardFieldNumber = 3;
    private global::Common.Messagepath.V1.Keyboard keyboard_;
    /// <summary>
    /// You can attach a Keyboard to a TextWidget, which specifies
    /// the keyboard to be shown when a reply button is pressed on the widget
    ///
    /// The `to` field of this Keyboard is ignored and overrided by the
    /// `to` field of the widget
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Messagepath.V1.Keyboard Keyboard {
      get { return keyboard_; }
      set {
        keyboard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TextWidget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TextWidget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Body != other.Body) return false;
      if (Title != other.Title) return false;
      if (!object.Equals(Keyboard, other.Keyboard)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (keyboard_ != null) hash ^= Keyboard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Body.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Body);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (keyboard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Keyboard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Body.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Body);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (keyboard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Keyboard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (keyboard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Keyboard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TextWidget other) {
      if (other == null) {
        return;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.keyboard_ != null) {
        if (keyboard_ == null) {
          Keyboard = new global::Common.Messagepath.V1.Keyboard();
        }
        Keyboard.MergeFrom(other.Keyboard);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Body = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            if (keyboard_ == null) {
              Keyboard = new global::Common.Messagepath.V1.Keyboard();
            }
            input.ReadMessage(Keyboard);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Body = input.ReadString();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 26: {
            if (keyboard_ == null) {
              Keyboard = new global::Common.Messagepath.V1.Keyboard();
            }
            input.ReadMessage(Keyboard);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
